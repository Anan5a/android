FILE
  PsiComment(AidlTokenTypes.BLOCK_COMMENT)('/*\n * Copyright (C) 2021 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */')
  AidlPackageImpl("android.aidl.tests.nested")
    PsiElement(AidlTokenTypes.PACKAGE_KEYWORD)('package')
    AidlQualifiedNameImpl("android.aidl.tests.nested")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("nested")
        PsiElement(AidlTokenTypes.IDENTIFIER)('nested')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  AidlImportImpl("android.aidl.tests.nested.ParcelableWithNested")
    PsiElement(AidlTokenTypes.IMPORT_KEYWORD)('import')
    AidlQualifiedNameImpl("android.aidl.tests.nested.ParcelableWithNested")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("nested")
        PsiElement(AidlTokenTypes.IDENTIFIER)('nested')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("ParcelableWithNested")
        PsiElement(AidlTokenTypes.IDENTIFIER)('ParcelableWithNested')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  AidlBodyImpl(BODY)
    AidlInterfaceDeclarationImpl("INestedService" as in "android.aidl.tests.nested.INestedService")
      PsiElement(AidlTokenTypes.INTERFACE_KEYWORD)('interface')
      AidlDottedNameImpl("INestedService")
        AidlNameComponentImpl("INestedService")
          PsiElement(AidlTokenTypes.IDENTIFIER)('INestedService')
      PsiElement(AidlTokenTypes.LBRACE)('{')
      AidlAnnotationElementImpl("RustDerive")
        PsiElement(AidlTokenTypes.AT)('@')
        AidlQualifiedNameImpl("RustDerive")
          AidlNameComponentImpl("RustDerive")
            PsiElement(AidlTokenTypes.IDENTIFIER)('RustDerive')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlNameComponentImpl("PartialEq")
          PsiElement(AidlTokenTypes.IDENTIFIER)('PartialEq')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.TRUE_KEYWORD)('true')
        PsiElement(AidlTokenTypes.RPAREN)(')')
      AidlParcelableDeclarationImpl("Result" as in "android.aidl.tests.nested.INestedService.Result")
        PsiElement(AidlTokenTypes.PARCELABLE_KEYWORD)('parcelable')
        AidlDottedNameImpl("Result")
          AidlNameComponentImpl("Result")
            PsiElement(AidlTokenTypes.IDENTIFIER)('Result')
        PsiElement(AidlTokenTypes.LBRACE)('{')
        AidlVariableDeclarationImpl("status")
          AidlTypeElementImpl("ParcelableWithNested.Status")
            AidlQualifiedNameImpl("ParcelableWithNested.Status")
              AidlNameComponentImpl("ParcelableWithNested")
                PsiElement(AidlTokenTypes.IDENTIFIER)('ParcelableWithNested')
              PsiElement(AidlTokenTypes.DOT)('.')
              AidlNameComponentImpl("Status")
                PsiElement(AidlTokenTypes.IDENTIFIER)('Status')
          AidlNameComponentImpl("status")
            PsiElement(AidlTokenTypes.IDENTIFIER)('status')
          PsiElement(AidlTokenTypes.ASSIGN)('=')
          AidlExpressionImpl("ParcelableWithNested.Status.OK")
            AidlQualifiedNameImpl("ParcelableWithNested.Status.OK")
              AidlNameComponentImpl("ParcelableWithNested")
                PsiElement(AidlTokenTypes.IDENTIFIER)('ParcelableWithNested')
              PsiElement(AidlTokenTypes.DOT)('.')
              AidlNameComponentImpl("Status")
                PsiElement(AidlTokenTypes.IDENTIFIER)('Status')
              PsiElement(AidlTokenTypes.DOT)('.')
              AidlNameComponentImpl("OK")
                PsiElement(AidlTokenTypes.IDENTIFIER)('OK')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        PsiElement(AidlTokenTypes.RBRACE)('}')
      AidlMethodDeclarationImpl("flipStatus")
        AidlTypeElementImpl("Result")
          AidlQualifiedNameImpl("Result")
            AidlNameComponentImpl("Result")
              PsiElement(AidlTokenTypes.IDENTIFIER)('Result')
        AidlNameComponentImpl("flipStatus")
          PsiElement(AidlTokenTypes.IDENTIFIER)('flipStatus')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("p")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("ParcelableWithNested")
            AidlQualifiedNameImpl("ParcelableWithNested")
              AidlNameComponentImpl("ParcelableWithNested")
                PsiElement(AidlTokenTypes.IDENTIFIER)('ParcelableWithNested')
          AidlNameComponentImpl("p")
            PsiElement(AidlTokenTypes.IDENTIFIER)('p')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlInterfaceDeclarationImpl("ICallback" as in "android.aidl.tests.nested.INestedService.ICallback")
        PsiElement(AidlTokenTypes.INTERFACE_KEYWORD)('interface')
        AidlDottedNameImpl("ICallback")
          AidlNameComponentImpl("ICallback")
            PsiElement(AidlTokenTypes.IDENTIFIER)('ICallback')
        PsiElement(AidlTokenTypes.LBRACE)('{')
        AidlMethodDeclarationImpl("done")
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.VOID_KEYWORD)('void')
          AidlNameComponentImpl("done")
            PsiElement(AidlTokenTypes.IDENTIFIER)('done')
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlParameterImpl("status")
            AidlTypeElementImpl("ParcelableWithNested.Status")
              AidlQualifiedNameImpl("ParcelableWithNested.Status")
                AidlNameComponentImpl("ParcelableWithNested")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('ParcelableWithNested')
                PsiElement(AidlTokenTypes.DOT)('.')
                AidlNameComponentImpl("Status")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('Status')
            AidlNameComponentImpl("status")
              PsiElement(AidlTokenTypes.IDENTIFIER)('status')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        PsiElement(AidlTokenTypes.RBRACE)('}')
      AidlMethodDeclarationImpl("flipStatusWithCallback")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.VOID_KEYWORD)('void')
        AidlNameComponentImpl("flipStatusWithCallback")
          PsiElement(AidlTokenTypes.IDENTIFIER)('flipStatusWithCallback')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("status")
          AidlTypeElementImpl("ParcelableWithNested.Status")
            AidlQualifiedNameImpl("ParcelableWithNested.Status")
              AidlNameComponentImpl("ParcelableWithNested")
                PsiElement(AidlTokenTypes.IDENTIFIER)('ParcelableWithNested')
              PsiElement(AidlTokenTypes.DOT)('.')
              AidlNameComponentImpl("Status")
                PsiElement(AidlTokenTypes.IDENTIFIER)('Status')
          AidlNameComponentImpl("status")
            PsiElement(AidlTokenTypes.IDENTIFIER)('status')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("cb")
          AidlTypeElementImpl("ICallback")
            AidlQualifiedNameImpl("ICallback")
              AidlNameComponentImpl("ICallback")
                PsiElement(AidlTokenTypes.IDENTIFIER)('ICallback')
          AidlNameComponentImpl("cb")
            PsiElement(AidlTokenTypes.IDENTIFIER)('cb')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiElement(AidlTokenTypes.RBRACE)('}')