FILE
  PsiComment(AidlTokenTypes.BLOCK_COMMENT)('/*\n * Copyright (C) 2019 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */')
  AidlPackageImpl("android.aidl.tests")
    PsiElement(AidlTokenTypes.PACKAGE_KEYWORD)('package')
    AidlQualifiedNameImpl("android.aidl.tests")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  PsiComment(AidlTokenTypes.BLOCK_COMMENT)('/*\n * Hello, world!\n */')
  AidlBodyImpl(BODY)
    AidlAnnotationElementImpl("Backing")
      PsiElement(AidlTokenTypes.AT)('@')
      AidlQualifiedNameImpl("Backing")
        AidlNameComponentImpl("Backing")
          PsiElement(AidlTokenTypes.IDENTIFIER)('Backing')
      PsiElement(AidlTokenTypes.LPAREN)('(')
      AidlNameComponentImpl("type")
        PsiElement(AidlTokenTypes.IDENTIFIER)('type')
      PsiElement(AidlTokenTypes.ASSIGN)('=')
      AidlExpressionImpl(EXPRESSION)
        PsiElement(AidlTokenTypes.C_STR)('"byte"')
      PsiElement(AidlTokenTypes.RPAREN)(')')
    AidlEnumDeclarationImpl("ByteEnum" as in "android.aidl.tests.ByteEnum")
      PsiElement(AidlTokenTypes.ENUM_KEYWORD)('enum')
      AidlDottedNameImpl("ByteEnum")
        AidlNameComponentImpl("ByteEnum")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ByteEnum')
      PsiElement(AidlTokenTypes.LBRACE)('{')
      PsiComment(AidlTokenTypes.COMMENT)('// Comment about FOO.')
      AidlEnumeratorDeclarationImpl("FOO")
        AidlNameComponentImpl("FOO")
          PsiElement(AidlTokenTypes.IDENTIFIER)('FOO')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('1')
      PsiElement(AidlTokenTypes.COMMA)(',')
      AidlEnumeratorDeclarationImpl("BAR")
        AidlNameComponentImpl("BAR")
          PsiElement(AidlTokenTypes.IDENTIFIER)('BAR')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('2')
      PsiElement(AidlTokenTypes.COMMA)(',')
      AidlEnumeratorDeclarationImpl("BAZ")
        AidlNameComponentImpl("BAZ")
          PsiElement(AidlTokenTypes.IDENTIFIER)('BAZ')
      PsiElement(AidlTokenTypes.COMMA)(',')
      PsiElement(AidlTokenTypes.RBRACE)('}')