FILE
  PsiComment(AidlTokenTypes.BLOCK_COMMENT)('/*\n * Copyright (C) 2018 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */')
  AidlPackageImpl("android.aidl.tests")
    PsiElement(AidlTokenTypes.PACKAGE_KEYWORD)('package')
    AidlQualifiedNameImpl("android.aidl.tests")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  AidlImportImpl("android.aidl.tests.ByteEnum")
    PsiElement(AidlTokenTypes.IMPORT_KEYWORD)('import')
    AidlQualifiedNameImpl("android.aidl.tests.ByteEnum")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("ByteEnum")
        PsiElement(AidlTokenTypes.IDENTIFIER)('ByteEnum')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  AidlImportImpl("android.aidl.tests.ConstantExpressionEnum")
    PsiElement(AidlTokenTypes.IMPORT_KEYWORD)('import')
    AidlQualifiedNameImpl("android.aidl.tests.ConstantExpressionEnum")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("ConstantExpressionEnum")
        PsiElement(AidlTokenTypes.IDENTIFIER)('ConstantExpressionEnum')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  AidlImportImpl("android.aidl.tests.IntEnum")
    PsiElement(AidlTokenTypes.IMPORT_KEYWORD)('import')
    AidlQualifiedNameImpl("android.aidl.tests.IntEnum")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("IntEnum")
        PsiElement(AidlTokenTypes.IDENTIFIER)('IntEnum')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  AidlImportImpl("android.aidl.tests.LongEnum")
    PsiElement(AidlTokenTypes.IMPORT_KEYWORD)('import')
    AidlQualifiedNameImpl("android.aidl.tests.LongEnum")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("LongEnum")
        PsiElement(AidlTokenTypes.IDENTIFIER)('LongEnum')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  AidlImportImpl("android.aidl.tests.Union")
    PsiElement(AidlTokenTypes.IMPORT_KEYWORD)('import')
    AidlQualifiedNameImpl("android.aidl.tests.Union")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("Union")
        PsiElement(AidlTokenTypes.IDENTIFIER)('Union')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  AidlBodyImpl(BODY)
    AidlAnnotationElementImpl("SuppressWarnings")
      PsiElement(AidlTokenTypes.AT)('@')
      AidlQualifiedNameImpl("SuppressWarnings")
        AidlNameComponentImpl("SuppressWarnings")
          PsiElement(AidlTokenTypes.IDENTIFIER)('SuppressWarnings')
      PsiElement(AidlTokenTypes.LPAREN)('(')
      AidlNameComponentImpl("value")
        PsiElement(AidlTokenTypes.IDENTIFIER)('value')
      PsiElement(AidlTokenTypes.ASSIGN)('=')
      AidlExpressionImpl(EXPRESSION)
        PsiElement(AidlTokenTypes.LBRACE)('{')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.C_STR)('"enum-explicit-default"')
        PsiElement(AidlTokenTypes.RBRACE)('}')
      PsiElement(AidlTokenTypes.RPAREN)(')')
    AidlAnnotationElementImpl("JavaDerive")
      PsiElement(AidlTokenTypes.AT)('@')
      AidlQualifiedNameImpl("JavaDerive")
        AidlNameComponentImpl("JavaDerive")
          PsiElement(AidlTokenTypes.IDENTIFIER)('JavaDerive')
      PsiElement(AidlTokenTypes.LPAREN)('(')
      AidlNameComponentImpl("toString")
        PsiElement(AidlTokenTypes.IDENTIFIER)('toString')
      PsiElement(AidlTokenTypes.ASSIGN)('=')
      AidlExpressionImpl(EXPRESSION)
        PsiElement(AidlTokenTypes.TRUE_KEYWORD)('true')
      PsiElement(AidlTokenTypes.COMMA)(',')
      AidlNameComponentImpl("equals")
        PsiElement(AidlTokenTypes.IDENTIFIER)('equals')
      PsiElement(AidlTokenTypes.ASSIGN)('=')
      AidlExpressionImpl(EXPRESSION)
        PsiElement(AidlTokenTypes.TRUE_KEYWORD)('true')
      PsiElement(AidlTokenTypes.RPAREN)(')')
    AidlAnnotationElementImpl("RustDerive")
      PsiElement(AidlTokenTypes.AT)('@')
      AidlQualifiedNameImpl("RustDerive")
        AidlNameComponentImpl("RustDerive")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RustDerive')
      PsiElement(AidlTokenTypes.LPAREN)('(')
      AidlNameComponentImpl("Clone")
        PsiElement(AidlTokenTypes.IDENTIFIER)('Clone')
      PsiElement(AidlTokenTypes.ASSIGN)('=')
      AidlExpressionImpl(EXPRESSION)
        PsiElement(AidlTokenTypes.TRUE_KEYWORD)('true')
      PsiElement(AidlTokenTypes.COMMA)(',')
      AidlNameComponentImpl("PartialEq")
        PsiElement(AidlTokenTypes.IDENTIFIER)('PartialEq')
      PsiElement(AidlTokenTypes.ASSIGN)('=')
      AidlExpressionImpl(EXPRESSION)
        PsiElement(AidlTokenTypes.TRUE_KEYWORD)('true')
      PsiElement(AidlTokenTypes.RPAREN)(')')
    AidlParcelableDeclarationImpl("StructuredParcelable" as in "android.aidl.tests.StructuredParcelable")
      PsiElement(AidlTokenTypes.PARCELABLE_KEYWORD)('parcelable')
      AidlDottedNameImpl("StructuredParcelable")
        AidlNameComponentImpl("StructuredParcelable")
          PsiElement(AidlTokenTypes.IDENTIFIER)('StructuredParcelable')
      PsiElement(AidlTokenTypes.LBRACE)('{')
      AidlVariableDeclarationImpl("shouldContainThreeFs")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("shouldContainThreeFs")
          PsiElement(AidlTokenTypes.IDENTIFIER)('shouldContainThreeFs')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("f")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("f")
          PsiElement(AidlTokenTypes.IDENTIFIER)('f')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("shouldBeJerry")
        AidlTypeElementImpl("String")
          AidlAnnotationElementImpl("utf8InCpp")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("utf8InCpp")
              AidlNameComponentImpl("utf8InCpp")
                PsiElement(AidlTokenTypes.IDENTIFIER)('utf8InCpp')
          AidlQualifiedNameImpl("String")
            AidlNameComponentImpl("String")
              PsiElement(AidlTokenTypes.IDENTIFIER)('String')
        AidlNameComponentImpl("shouldBeJerry")
          PsiElement(AidlTokenTypes.IDENTIFIER)('shouldBeJerry')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("shouldBeByteBar")
        AidlTypeElementImpl("ByteEnum")
          AidlQualifiedNameImpl("ByteEnum")
            AidlNameComponentImpl("ByteEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('ByteEnum')
        AidlNameComponentImpl("shouldBeByteBar")
          PsiElement(AidlTokenTypes.IDENTIFIER)('shouldBeByteBar')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("shouldBeIntBar")
        AidlTypeElementImpl("IntEnum")
          AidlQualifiedNameImpl("IntEnum")
            AidlNameComponentImpl("IntEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('IntEnum')
        AidlNameComponentImpl("shouldBeIntBar")
          PsiElement(AidlTokenTypes.IDENTIFIER)('shouldBeIntBar')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("shouldBeLongBar")
        AidlTypeElementImpl("LongEnum")
          AidlQualifiedNameImpl("LongEnum")
            AidlNameComponentImpl("LongEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('LongEnum')
        AidlNameComponentImpl("shouldBeLongBar")
          PsiElement(AidlTokenTypes.IDENTIFIER)('shouldBeLongBar')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("shouldContainTwoByteFoos")
        AidlTypeElementImpl("ByteEnum")
          AidlQualifiedNameImpl("ByteEnum")
            AidlNameComponentImpl("ByteEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('ByteEnum')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("shouldContainTwoByteFoos")
          PsiElement(AidlTokenTypes.IDENTIFIER)('shouldContainTwoByteFoos')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("shouldContainTwoIntFoos")
        AidlTypeElementImpl("IntEnum")
          AidlQualifiedNameImpl("IntEnum")
            AidlNameComponentImpl("IntEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('IntEnum')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("shouldContainTwoIntFoos")
          PsiElement(AidlTokenTypes.IDENTIFIER)('shouldContainTwoIntFoos')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("shouldContainTwoLongFoos")
        AidlTypeElementImpl("LongEnum")
          AidlQualifiedNameImpl("LongEnum")
            AidlNameComponentImpl("LongEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('LongEnum')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("shouldContainTwoLongFoos")
          PsiElement(AidlTokenTypes.IDENTIFIER)('shouldContainTwoLongFoos')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("stringDefaultsToFoo")
        AidlTypeElementImpl("String")
          AidlQualifiedNameImpl("String")
            AidlNameComponentImpl("String")
              PsiElement(AidlTokenTypes.IDENTIFIER)('String')
        AidlNameComponentImpl("stringDefaultsToFoo")
          PsiElement(AidlTokenTypes.IDENTIFIER)('stringDefaultsToFoo')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.C_STR)('"foo"')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("byteDefaultsToFour")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.BYTE_KEYWORD)('byte')
        AidlNameComponentImpl("byteDefaultsToFour")
          PsiElement(AidlTokenTypes.IDENTIFIER)('byteDefaultsToFour')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('4')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("intDefaultsToFive")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("intDefaultsToFive")
          PsiElement(AidlTokenTypes.IDENTIFIER)('intDefaultsToFive')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('5')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("longDefaultsToNegativeSeven")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.LONG_KEYWORD)('long')
        AidlNameComponentImpl("longDefaultsToNegativeSeven")
          PsiElement(AidlTokenTypes.IDENTIFIER)('longDefaultsToNegativeSeven')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.MINUS)('-')
          PsiElement(AidlTokenTypes.INTVALUE)('7')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("booleanDefaultsToTrue")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.BOOLEAN_KEYWORD)('boolean')
        AidlNameComponentImpl("booleanDefaultsToTrue")
          PsiElement(AidlTokenTypes.IDENTIFIER)('booleanDefaultsToTrue')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.TRUE_KEYWORD)('true')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("charDefaultsToC")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.CHAR_KEYWORD)('char')
        AidlNameComponentImpl("charDefaultsToC")
          PsiElement(AidlTokenTypes.IDENTIFIER)('charDefaultsToC')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.CHARVALUE)(''C'')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("floatDefaultsToPi")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.FLOAT_KEYWORD)('float')
        AidlNameComponentImpl("floatDefaultsToPi")
          PsiElement(AidlTokenTypes.IDENTIFIER)('floatDefaultsToPi')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.FLOATVALUE)('3.14f')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("doubleWithDefault")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.DOUBLE_KEYWORD)('double')
        AidlNameComponentImpl("doubleWithDefault")
          PsiElement(AidlTokenTypes.IDENTIFIER)('doubleWithDefault')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.MINUS)('-')
          PsiElement(AidlTokenTypes.FLOATVALUE)('3.14e17')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("arrayDefaultsTo123")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("arrayDefaultsTo123")
          PsiElement(AidlTokenTypes.IDENTIFIER)('arrayDefaultsTo123')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LBRACE)('{')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('2')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('3')
          PsiElement(AidlTokenTypes.COMMA)(',')
          PsiElement(AidlTokenTypes.RBRACE)('}')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("arrayDefaultsToEmpty")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("arrayDefaultsToEmpty")
          PsiElement(AidlTokenTypes.IDENTIFIER)('arrayDefaultsToEmpty')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LBRACE)('{')
          PsiElement(AidlTokenTypes.RBRACE)('}')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("boolDefault")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.BOOLEAN_KEYWORD)('boolean')
        AidlNameComponentImpl("boolDefault")
          PsiElement(AidlTokenTypes.IDENTIFIER)('boolDefault')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("byteDefault")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.BYTE_KEYWORD)('byte')
        AidlNameComponentImpl("byteDefault")
          PsiElement(AidlTokenTypes.IDENTIFIER)('byteDefault')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("intDefault")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("intDefault")
          PsiElement(AidlTokenTypes.IDENTIFIER)('intDefault')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("longDefault")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.LONG_KEYWORD)('long')
        AidlNameComponentImpl("longDefault")
          PsiElement(AidlTokenTypes.IDENTIFIER)('longDefault')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("floatDefault")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.FLOAT_KEYWORD)('float')
        AidlNameComponentImpl("floatDefault")
          PsiElement(AidlTokenTypes.IDENTIFIER)('floatDefault')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("doubleDefault")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.DOUBLE_KEYWORD)('double')
        AidlNameComponentImpl("doubleDefault")
          PsiElement(AidlTokenTypes.IDENTIFIER)('doubleDefault')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// parse checks only')
      AidlVariableDeclarationImpl("checkDoubleFromFloat")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.DOUBLE_KEYWORD)('double')
        AidlNameComponentImpl("checkDoubleFromFloat")
          PsiElement(AidlTokenTypes.IDENTIFIER)('checkDoubleFromFloat')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.FLOATVALUE)('3.14f')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("checkStringArray1")
        AidlTypeElementImpl("String")
          AidlQualifiedNameImpl("String")
            AidlNameComponentImpl("String")
              PsiElement(AidlTokenTypes.IDENTIFIER)('String')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("checkStringArray1")
          PsiElement(AidlTokenTypes.IDENTIFIER)('checkStringArray1')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LBRACE)('{')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.C_STR)('"a"')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.C_STR)('"b"')
          PsiElement(AidlTokenTypes.RBRACE)('}')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("checkStringArray2")
        AidlTypeElementImpl("String")
          AidlAnnotationElementImpl("utf8InCpp")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("utf8InCpp")
              AidlNameComponentImpl("utf8InCpp")
                PsiElement(AidlTokenTypes.IDENTIFIER)('utf8InCpp')
          AidlQualifiedNameImpl("String")
            AidlNameComponentImpl("String")
              PsiElement(AidlTokenTypes.IDENTIFIER)('String')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("checkStringArray2")
          PsiElement(AidlTokenTypes.IDENTIFIER)('checkStringArray2')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LBRACE)('{')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.C_STR)('"a"')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.C_STR)('"b"')
          PsiElement(AidlTokenTypes.RBRACE)('}')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// Add test to verify corner cases')
      AidlVariableDeclarationImpl("int32_min")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("int32_min")
          PsiElement(AidlTokenTypes.IDENTIFIER)('int32_min')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.MINUS)('-')
          PsiElement(AidlTokenTypes.INTVALUE)('2147483648')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("int32_max")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("int32_max")
          PsiElement(AidlTokenTypes.IDENTIFIER)('int32_max')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('2147483647')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("int64_max")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.LONG_KEYWORD)('long')
        AidlNameComponentImpl("int64_max")
          PsiElement(AidlTokenTypes.IDENTIFIER)('int64_max')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('9223372036854775807')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("hexInt32_neg_1")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("hexInt32_neg_1")
          PsiElement(AidlTokenTypes.IDENTIFIER)('hexInt32_neg_1')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.HEXVALUE)('0xffffffff')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("ibinder")
        AidlTypeElementImpl("IBinder")
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlQualifiedNameImpl("IBinder")
            AidlNameComponentImpl("IBinder")
              PsiElement(AidlTokenTypes.IDENTIFIER)('IBinder')
        AidlNameComponentImpl("ibinder")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ibinder')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// Make sure we can send an empty parcelable')
      AidlAnnotationElementImpl("JavaDerive")
        PsiElement(AidlTokenTypes.AT)('@')
        AidlQualifiedNameImpl("JavaDerive")
          AidlNameComponentImpl("JavaDerive")
            PsiElement(AidlTokenTypes.IDENTIFIER)('JavaDerive')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlNameComponentImpl("toString")
          PsiElement(AidlTokenTypes.IDENTIFIER)('toString')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.TRUE_KEYWORD)('true')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlNameComponentImpl("equals")
          PsiElement(AidlTokenTypes.IDENTIFIER)('equals')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.TRUE_KEYWORD)('true')
        PsiElement(AidlTokenTypes.RPAREN)(')')
      AidlAnnotationElementImpl("RustDerive")
        PsiElement(AidlTokenTypes.AT)('@')
        AidlQualifiedNameImpl("RustDerive")
          AidlNameComponentImpl("RustDerive")
            PsiElement(AidlTokenTypes.IDENTIFIER)('RustDerive')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlNameComponentImpl("Clone")
          PsiElement(AidlTokenTypes.IDENTIFIER)('Clone')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.TRUE_KEYWORD)('true')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlNameComponentImpl("PartialEq")
          PsiElement(AidlTokenTypes.IDENTIFIER)('PartialEq')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.TRUE_KEYWORD)('true')
        PsiElement(AidlTokenTypes.RPAREN)(')')
      AidlParcelableDeclarationImpl("Empty" as in "android.aidl.tests.StructuredParcelable.Empty")
        PsiElement(AidlTokenTypes.PARCELABLE_KEYWORD)('parcelable')
        AidlDottedNameImpl("Empty")
          AidlNameComponentImpl("Empty")
            PsiElement(AidlTokenTypes.IDENTIFIER)('Empty')
        PsiElement(AidlTokenTypes.LBRACE)('{')
        PsiElement(AidlTokenTypes.RBRACE)('}')
      AidlVariableDeclarationImpl("empty")
        AidlTypeElementImpl("Empty")
          AidlQualifiedNameImpl("Empty")
            AidlNameComponentImpl("Empty")
              PsiElement(AidlTokenTypes.IDENTIFIER)('Empty')
        AidlNameComponentImpl("empty")
          PsiElement(AidlTokenTypes.IDENTIFIER)('empty')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// Constant expressions that evaluate to 1')
      AidlVariableDeclarationImpl("int8_1")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.BYTE_KEYWORD)('byte')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("int8_1")
          PsiElement(AidlTokenTypes.IDENTIFIER)('int8_1')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LBRACE)('{')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.HEXVALUE)('0xffu8')
            PsiElement(AidlTokenTypes.PLUS)('+')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
              PsiElement(AidlTokenTypes.EQUALITY)('==')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('255u8')
            PsiElement(AidlTokenTypes.PLUS)('+')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
              PsiElement(AidlTokenTypes.EQUALITY)('==')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.HEXVALUE)('0x80u8')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.MINUS)('-')
              PsiElement(AidlTokenTypes.INTVALUE)('128')
          PsiElement(AidlTokenTypes.COMMA)(',')
          PsiComment(AidlTokenTypes.COMMENT)('// u8 type is reinterpreted as a signed type')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.HEXVALUE)('0x80u8')
            PsiElement(AidlTokenTypes.DIVIDE)('/')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('2')
              PsiElement(AidlTokenTypes.EQUALITY)('==')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.MINUS)('-')
                PsiElement(AidlTokenTypes.HEXVALUE)('0x40u8')
          PsiElement(AidlTokenTypes.COMMA)(',')
          PsiElement(AidlTokenTypes.RBRACE)('}')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("int32_1")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("int32_1")
          PsiElement(AidlTokenTypes.IDENTIFIER)('int32_1')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LBRACE)('{')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.BITWISE_COMPLEMENT)('~')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.LPAREN)('(')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.MINUS)('-')
                  PsiElement(AidlTokenTypes.INTVALUE)('1')
                PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.BITWISE_COMPLEMENT)('~')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.BITWISE_COMPLEMENT)('~')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.LPAREN)('(')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.INTVALUE)('1')
                  PsiElement(AidlTokenTypes.LSHIFT)('<<')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.INTVALUE)('31')
                PsiElement(AidlTokenTypes.RPAREN)(')')
                PsiElement(AidlTokenTypes.EQUALITY)('==')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.LPAREN)('(')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.INTVALUE)('1')
                    PsiElement(AidlTokenTypes.LSHIFT)('<<')
                    AidlExpressionImpl(EXPRESSION)
                      PsiElement(AidlTokenTypes.INTVALUE)('31')
                  PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.MINUS)('-')
            PsiElement(AidlTokenTypes.HEXVALUE)('0x7fffffff')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.HEXVALUE)('0x80000000')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.HEXVALUE)('0x7fffffff')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('2147483647')
          PsiElement(AidlTokenTypes.COMMA)(',')
          PsiComment(AidlTokenTypes.COMMENT)('// Shifting for more than 31 bits are undefined. Not tested.')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
              PsiElement(AidlTokenTypes.LSHIFT)('<<')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('31')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.HEXVALUE)('0x80000000')
          PsiElement(AidlTokenTypes.COMMA)(',')
          PsiComment(AidlTokenTypes.COMMENT)('// Should be all true / ones.')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
              PsiElement(AidlTokenTypes.PLUS)('+')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('2')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('3')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('8')
              PsiElement(AidlTokenTypes.MINUS)('-')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('9')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.MINUS)('-')
              PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('9')
              PsiElement(AidlTokenTypes.MULTIPLY)('*')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('9')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('81')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('29')
              PsiElement(AidlTokenTypes.DIVIDE)('/')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('3')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('9')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('29')
              PsiElement(AidlTokenTypes.MODULO)('%')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('3')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('2')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.HEXVALUE)('0xC0010000')
              PsiElement(AidlTokenTypes.BITWISE_OR)('|')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.HEXVALUE)('0xF00D')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.LPAREN)('(')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.HEXVALUE)('0xC001F00D')
              PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('10')
              PsiElement(AidlTokenTypes.BITWISE_OR)('|')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('6')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('14')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('10')
              PsiElement(AidlTokenTypes.BITWISE_AND)('&')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('6')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('2')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('10')
              PsiElement(AidlTokenTypes.BITWISE_XOR)('^')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('6')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('12')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('6')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('10')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('10')
              PsiElement(AidlTokenTypes.LT)('<')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('10')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('6')
              PsiElement(AidlTokenTypes.GT)('>')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('10')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('10')
              PsiElement(AidlTokenTypes.GT)('>')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('10')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('19')
            PsiElement(AidlTokenTypes.GEQ)('>=')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('10')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('10')
            PsiElement(AidlTokenTypes.GEQ)('>=')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('10')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('5')
            PsiElement(AidlTokenTypes.LEQ)('<=')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('10')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('19')
              PsiElement(AidlTokenTypes.LEQ)('<=')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('10')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('19')
            PsiElement(AidlTokenTypes.NEQ)('!=')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('10')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('10')
              PsiElement(AidlTokenTypes.NEQ)('!=')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('10')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('22')
              PsiElement(AidlTokenTypes.LSHIFT)('<<')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('44')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('11')
              PsiElement(AidlTokenTypes.RSHIFT)('>>')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('5')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
              PsiElement(AidlTokenTypes.LOGICAL_OR)('||')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('0')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
              PsiElement(AidlTokenTypes.LOGICAL_OR)('||')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
              PsiElement(AidlTokenTypes.LOGICAL_OR)('||')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('0')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
              PsiElement(AidlTokenTypes.LOGICAL_OR)('||')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
              PsiElement(AidlTokenTypes.LOGICAL_AND)('&&')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('0')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
              PsiElement(AidlTokenTypes.LOGICAL_AND)('&&')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
              PsiElement(AidlTokenTypes.LOGICAL_AND)('&&')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('0')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
              PsiElement(AidlTokenTypes.LOGICAL_AND)('&&')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          PsiComment(AidlTokenTypes.COMMENT)('// precedence tests -- all 1s')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('4')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('4')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.MINUS)('-')
            PsiElement(AidlTokenTypes.INTVALUE)('4')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.HEXVALUE)('0xffffffff')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.MINUS)('-')
              PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('4')
            PsiElement(AidlTokenTypes.PLUS)('+')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
              PsiElement(AidlTokenTypes.EQUALITY)('==')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('5')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('2')
            PsiElement(AidlTokenTypes.PLUS)('+')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('3')
              PsiElement(AidlTokenTypes.MINUS)('-')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('4')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('2')
            PsiElement(AidlTokenTypes.MINUS)('-')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('3')
              PsiElement(AidlTokenTypes.PLUS)('+')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('4')
                PsiElement(AidlTokenTypes.EQUALITY)('==')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.INTVALUE)('3')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('4')
              PsiElement(AidlTokenTypes.EQUALITY)('==')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.LOGICAL_AND)('&&')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.LOGICAL_OR)('||')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
              PsiElement(AidlTokenTypes.LOGICAL_AND)('&&')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          PsiComment(AidlTokenTypes.COMMENT)('// && higher than ||')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('2')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.NOT)('!')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.NOT)('!')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.LPAREN)('(')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.LPAREN)('(')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.INTVALUE)('3')
                    PsiElement(AidlTokenTypes.NEQ)('!=')
                    AidlExpressionImpl(EXPRESSION)
                      PsiElement(AidlTokenTypes.INTVALUE)('4')
                      PsiElement(AidlTokenTypes.LOGICAL_OR)('||')
                      AidlExpressionImpl(EXPRESSION)
                        PsiElement(AidlTokenTypes.LPAREN)('(')
                        AidlExpressionImpl(EXPRESSION)
                          PsiElement(AidlTokenTypes.INTVALUE)('2')
                          PsiElement(AidlTokenTypes.LT)('<')
                          AidlExpressionImpl(EXPRESSION)
                            PsiElement(AidlTokenTypes.INTVALUE)('3')
                            PsiElement(AidlTokenTypes.LEQ)('<=')
                            AidlExpressionImpl(EXPRESSION)
                              PsiElement(AidlTokenTypes.INTVALUE)('3')
                              PsiElement(AidlTokenTypes.GT)('>')
                              AidlExpressionImpl(EXPRESSION)
                                PsiElement(AidlTokenTypes.INTVALUE)('4')
                        PsiElement(AidlTokenTypes.RPAREN)(')')
                  PsiElement(AidlTokenTypes.RPAREN)(')')
                  PsiElement(AidlTokenTypes.GEQ)('>=')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.INTVALUE)('0')
                PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.NOT)('!')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.LPAREN)('(')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('1')
                PsiElement(AidlTokenTypes.EQUALITY)('==')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.INTVALUE)('7')
              PsiElement(AidlTokenTypes.RPAREN)(')')
              PsiElement(AidlTokenTypes.LOGICAL_AND)('&&')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.LPAREN)('(')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.LPAREN)('(')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.INTVALUE)('3')
                    PsiElement(AidlTokenTypes.NEQ)('!=')
                    AidlExpressionImpl(EXPRESSION)
                      PsiElement(AidlTokenTypes.INTVALUE)('4')
                      PsiElement(AidlTokenTypes.LOGICAL_OR)('||')
                      AidlExpressionImpl(EXPRESSION)
                        PsiElement(AidlTokenTypes.LPAREN)('(')
                        AidlExpressionImpl(EXPRESSION)
                          PsiElement(AidlTokenTypes.INTVALUE)('2')
                          PsiElement(AidlTokenTypes.LT)('<')
                          AidlExpressionImpl(EXPRESSION)
                            PsiElement(AidlTokenTypes.INTVALUE)('3')
                            PsiElement(AidlTokenTypes.LEQ)('<=')
                            AidlExpressionImpl(EXPRESSION)
                              PsiElement(AidlTokenTypes.INTVALUE)('3')
                              PsiElement(AidlTokenTypes.GT)('>')
                              AidlExpressionImpl(EXPRESSION)
                                PsiElement(AidlTokenTypes.INTVALUE)('4')
                        PsiElement(AidlTokenTypes.RPAREN)(')')
                  PsiElement(AidlTokenTypes.RPAREN)(')')
                  PsiElement(AidlTokenTypes.GEQ)('>=')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.INTVALUE)('0')
                PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
              PsiElement(AidlTokenTypes.LSHIFT)('<<')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('2')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.GEQ)('>=')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('4')
              PsiElement(AidlTokenTypes.RSHIFT)('>>')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('2')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('8')
              PsiElement(AidlTokenTypes.LSHIFT)('<<')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.MINUS)('-')
                PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('4')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
              PsiElement(AidlTokenTypes.LSHIFT)('<<')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('30')
                PsiElement(AidlTokenTypes.RSHIFT)('>>')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.INTVALUE)('30')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
              PsiElement(AidlTokenTypes.BITWISE_OR)('|')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('16')
                PsiElement(AidlTokenTypes.RSHIFT)('>>')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.INTVALUE)('2')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('5')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.HEXVALUE)('0x0f')
              PsiElement(AidlTokenTypes.BITWISE_XOR)('^')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.HEXVALUE)('0x33')
                PsiElement(AidlTokenTypes.BITWISE_AND)('&')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.HEXVALUE)('0x99')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.HEXVALUE)('0x1e')
          PsiElement(AidlTokenTypes.COMMA)(',')
          PsiComment(AidlTokenTypes.COMMENT)('// & higher than ^')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.BITWISE_COMPLEMENT)('~')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('42')
                PsiElement(AidlTokenTypes.BITWISE_AND)('&')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.LPAREN)('(')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.INTVALUE)('1')
                    PsiElement(AidlTokenTypes.LSHIFT)('<<')
                    AidlExpressionImpl(EXPRESSION)
                      PsiElement(AidlTokenTypes.INTVALUE)('3')
                      PsiElement(AidlTokenTypes.BITWISE_OR)('|')
                      AidlExpressionImpl(EXPRESSION)
                        PsiElement(AidlTokenTypes.INTVALUE)('16')
                        PsiElement(AidlTokenTypes.RSHIFT)('>>')
                        AidlExpressionImpl(EXPRESSION)
                          PsiElement(AidlTokenTypes.INTVALUE)('2')
                  PsiElement(AidlTokenTypes.RPAREN)(')')
                  PsiElement(AidlTokenTypes.BITWISE_XOR)('^')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.INTVALUE)('7')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('3')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('2')
              PsiElement(AidlTokenTypes.PLUS)('+')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('3')
                PsiElement(AidlTokenTypes.MINUS)('-')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.INTVALUE)('4')
                  PsiElement(AidlTokenTypes.MULTIPLY)('*')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.MINUS)('-')
                    PsiElement(AidlTokenTypes.INTVALUE)('7')
                    PsiElement(AidlTokenTypes.DIVIDE)('/')
                    AidlExpressionImpl(EXPRESSION)
                      PsiElement(AidlTokenTypes.LPAREN)('(')
                      AidlExpressionImpl(EXPRESSION)
                        PsiElement(AidlTokenTypes.INTVALUE)('10')
                        PsiElement(AidlTokenTypes.MODULO)('%')
                        AidlExpressionImpl(EXPRESSION)
                          PsiElement(AidlTokenTypes.INTVALUE)('3')
                      PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.MINUS)('-')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('33')
              PsiElement(AidlTokenTypes.EQUALITY)('==')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('2')
              PsiElement(AidlTokenTypes.PLUS)('+')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.LPAREN)('(')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.MINUS)('-')
                  PsiElement(AidlTokenTypes.INTVALUE)('3')
                  PsiElement(AidlTokenTypes.BITWISE_AND)('&')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.INTVALUE)('4')
                    PsiElement(AidlTokenTypes.DIVIDE)('/')
                    AidlExpressionImpl(EXPRESSION)
                      PsiElement(AidlTokenTypes.INTVALUE)('7')
                PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('2')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.LPAREN)('(')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.LPAREN)('(')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.LPAREN)('(')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.LPAREN)('(')
                    AidlExpressionImpl(EXPRESSION)
                      PsiElement(AidlTokenTypes.INTVALUE)('1')
                      PsiElement(AidlTokenTypes.PLUS)('+')
                      AidlExpressionImpl(EXPRESSION)
                        PsiElement(AidlTokenTypes.INTVALUE)('0')
                    PsiElement(AidlTokenTypes.RPAREN)(')')
                  PsiElement(AidlTokenTypes.RPAREN)(')')
                PsiElement(AidlTokenTypes.RPAREN)(')')
              PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.COMMA)(',')
          PsiElement(AidlTokenTypes.RBRACE)('}')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("int64_1")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.LONG_KEYWORD)('long')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("int64_1")
          PsiElement(AidlTokenTypes.IDENTIFIER)('int64_1')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LBRACE)('{')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.BITWISE_COMPLEMENT)('~')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.LPAREN)('(')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.MINUS)('-')
                  PsiElement(AidlTokenTypes.INTVALUE)('1')
                PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.BITWISE_COMPLEMENT)('~')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('4294967295')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.NEQ)('!=')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.BITWISE_COMPLEMENT)('~')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('4294967295')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.NEQ)('!=')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.BITWISE_COMPLEMENT)('~')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.BITWISE_COMPLEMENT)('~')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.LPAREN)('(')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.INTVALUE)('1L')
                  PsiElement(AidlTokenTypes.LSHIFT)('<<')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.INTVALUE)('63')
                PsiElement(AidlTokenTypes.RPAREN)(')')
                PsiElement(AidlTokenTypes.EQUALITY)('==')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.LPAREN)('(')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.INTVALUE)('1L')
                    PsiElement(AidlTokenTypes.LSHIFT)('<<')
                    AidlExpressionImpl(EXPRESSION)
                      PsiElement(AidlTokenTypes.INTVALUE)('63')
                  PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.MINUS)('-')
            PsiElement(AidlTokenTypes.HEXVALUE)('0x7FFFFFFFFFFFFFFF')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.HEXVALUE)('0x7fffffff')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('2147483647')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.HEXVALUE)('0xfffffffff')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('68719476735')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.HEXVALUE)('0xffffffffffffffff')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.MINUS)('-')
              PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.HEXVALUE)('0xfL')
              PsiElement(AidlTokenTypes.LSHIFT)('<<')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('32L')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.HEXVALUE)('0xf00000000')
          PsiElement(AidlTokenTypes.COMMA)(',')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.HEXVALUE)('0xfL')
              PsiElement(AidlTokenTypes.LSHIFT)('<<')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('32')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.HEXVALUE)('0xf00000000')
          PsiElement(AidlTokenTypes.COMMA)(',')
          PsiElement(AidlTokenTypes.RBRACE)('}')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("hexInt32_pos_1")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("hexInt32_pos_1")
          PsiElement(AidlTokenTypes.IDENTIFIER)('hexInt32_pos_1')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.MINUS)('-')
          PsiElement(AidlTokenTypes.HEXVALUE)('0xffffffff')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("hexInt64_pos_1")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("hexInt64_pos_1")
          PsiElement(AidlTokenTypes.IDENTIFIER)('hexInt64_pos_1')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.MINUS)('-')
          PsiElement(AidlTokenTypes.HEXVALUE)('0xfffffffffff')
          PsiElement(AidlTokenTypes.LT)('<')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("const_exprs_1")
        AidlTypeElementImpl("ConstantExpressionEnum")
          AidlQualifiedNameImpl("ConstantExpressionEnum")
            AidlNameComponentImpl("ConstantExpressionEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('ConstantExpressionEnum')
        AidlNameComponentImpl("const_exprs_1")
          PsiElement(AidlTokenTypes.IDENTIFIER)('const_exprs_1')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("const_exprs_2")
        AidlTypeElementImpl("ConstantExpressionEnum")
          AidlQualifiedNameImpl("ConstantExpressionEnum")
            AidlNameComponentImpl("ConstantExpressionEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('ConstantExpressionEnum')
        AidlNameComponentImpl("const_exprs_2")
          PsiElement(AidlTokenTypes.IDENTIFIER)('const_exprs_2')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("const_exprs_3")
        AidlTypeElementImpl("ConstantExpressionEnum")
          AidlQualifiedNameImpl("ConstantExpressionEnum")
            AidlNameComponentImpl("ConstantExpressionEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('ConstantExpressionEnum')
        AidlNameComponentImpl("const_exprs_3")
          PsiElement(AidlTokenTypes.IDENTIFIER)('const_exprs_3')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("const_exprs_4")
        AidlTypeElementImpl("ConstantExpressionEnum")
          AidlQualifiedNameImpl("ConstantExpressionEnum")
            AidlNameComponentImpl("ConstantExpressionEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('ConstantExpressionEnum')
        AidlNameComponentImpl("const_exprs_4")
          PsiElement(AidlTokenTypes.IDENTIFIER)('const_exprs_4')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("const_exprs_5")
        AidlTypeElementImpl("ConstantExpressionEnum")
          AidlQualifiedNameImpl("ConstantExpressionEnum")
            AidlNameComponentImpl("ConstantExpressionEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('ConstantExpressionEnum')
        AidlNameComponentImpl("const_exprs_5")
          PsiElement(AidlTokenTypes.IDENTIFIER)('const_exprs_5')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("const_exprs_6")
        AidlTypeElementImpl("ConstantExpressionEnum")
          AidlQualifiedNameImpl("ConstantExpressionEnum")
            AidlNameComponentImpl("ConstantExpressionEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('ConstantExpressionEnum')
        AidlNameComponentImpl("const_exprs_6")
          PsiElement(AidlTokenTypes.IDENTIFIER)('const_exprs_6')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("const_exprs_7")
        AidlTypeElementImpl("ConstantExpressionEnum")
          AidlQualifiedNameImpl("ConstantExpressionEnum")
            AidlNameComponentImpl("ConstantExpressionEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('ConstantExpressionEnum')
        AidlNameComponentImpl("const_exprs_7")
          PsiElement(AidlTokenTypes.IDENTIFIER)('const_exprs_7')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("const_exprs_8")
        AidlTypeElementImpl("ConstantExpressionEnum")
          AidlQualifiedNameImpl("ConstantExpressionEnum")
            AidlNameComponentImpl("ConstantExpressionEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('ConstantExpressionEnum')
        AidlNameComponentImpl("const_exprs_8")
          PsiElement(AidlTokenTypes.IDENTIFIER)('const_exprs_8')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("const_exprs_9")
        AidlTypeElementImpl("ConstantExpressionEnum")
          AidlQualifiedNameImpl("ConstantExpressionEnum")
            AidlNameComponentImpl("ConstantExpressionEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('ConstantExpressionEnum')
        AidlNameComponentImpl("const_exprs_9")
          PsiElement(AidlTokenTypes.IDENTIFIER)('const_exprs_9')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("const_exprs_10")
        AidlTypeElementImpl("ConstantExpressionEnum")
          AidlQualifiedNameImpl("ConstantExpressionEnum")
            AidlNameComponentImpl("ConstantExpressionEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('ConstantExpressionEnum')
        AidlNameComponentImpl("const_exprs_10")
          PsiElement(AidlTokenTypes.IDENTIFIER)('const_exprs_10')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// String expressions')
      AidlVariableDeclarationImpl("addString1")
        AidlTypeElementImpl("String")
          AidlAnnotationElementImpl("utf8InCpp")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("utf8InCpp")
              AidlNameComponentImpl("utf8InCpp")
                PsiElement(AidlTokenTypes.IDENTIFIER)('utf8InCpp')
          AidlQualifiedNameImpl("String")
            AidlNameComponentImpl("String")
              PsiElement(AidlTokenTypes.IDENTIFIER)('String')
        AidlNameComponentImpl("addString1")
          PsiElement(AidlTokenTypes.IDENTIFIER)('addString1')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.C_STR)('"hello"')
          PsiElement(AidlTokenTypes.PLUS)('+')
          PsiElement(AidlTokenTypes.C_STR)('" world!"')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("addString2")
        AidlTypeElementImpl("String")
          AidlAnnotationElementImpl("utf8InCpp")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("utf8InCpp")
              AidlNameComponentImpl("utf8InCpp")
                PsiElement(AidlTokenTypes.IDENTIFIER)('utf8InCpp')
          AidlQualifiedNameImpl("String")
            AidlNameComponentImpl("String")
              PsiElement(AidlTokenTypes.IDENTIFIER)('String')
        AidlNameComponentImpl("addString2")
          PsiElement(AidlTokenTypes.IDENTIFIER)('addString2')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.C_STR)('"The quick brown fox jumps "')
          PsiElement(AidlTokenTypes.PLUS)('+')
          PsiElement(AidlTokenTypes.C_STR)('"over the lazy dog."')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("BIT0")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("BIT0")
          PsiElement(AidlTokenTypes.IDENTIFIER)('BIT0')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.HEXVALUE)('0x1')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("BIT1")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("BIT1")
          PsiElement(AidlTokenTypes.IDENTIFIER)('BIT1')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.HEXVALUE)('0x1')
          PsiElement(AidlTokenTypes.LSHIFT)('<<')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("BIT2")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("BIT2")
          PsiElement(AidlTokenTypes.IDENTIFIER)('BIT2')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.HEXVALUE)('0x1')
          PsiElement(AidlTokenTypes.LSHIFT)('<<')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('2')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("shouldSetBit0AndBit2")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("shouldSetBit0AndBit2")
          PsiElement(AidlTokenTypes.IDENTIFIER)('shouldSetBit0AndBit2')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("u")
        AidlTypeElementImpl("Union")
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlQualifiedNameImpl("Union")
            AidlNameComponentImpl("Union")
              PsiElement(AidlTokenTypes.IDENTIFIER)('Union')
        AidlNameComponentImpl("u")
          PsiElement(AidlTokenTypes.IDENTIFIER)('u')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("shouldBeConstS1")
        AidlTypeElementImpl("Union")
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlQualifiedNameImpl("Union")
            AidlNameComponentImpl("Union")
              PsiElement(AidlTokenTypes.IDENTIFIER)('Union')
        AidlNameComponentImpl("shouldBeConstS1")
          PsiElement(AidlTokenTypes.IDENTIFIER)('shouldBeConstS1')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlVariableDeclarationImpl("defaultWithFoo")
        AidlTypeElementImpl("IntEnum")
          AidlQualifiedNameImpl("IntEnum")
            AidlNameComponentImpl("IntEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('IntEnum')
        AidlNameComponentImpl("defaultWithFoo")
          PsiElement(AidlTokenTypes.IDENTIFIER)('defaultWithFoo')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl("IntEnum.FOO")
          AidlQualifiedNameImpl("IntEnum.FOO")
            AidlNameComponentImpl("IntEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('IntEnum')
            PsiElement(AidlTokenTypes.DOT)('.')
            AidlNameComponentImpl("FOO")
              PsiElement(AidlTokenTypes.IDENTIFIER)('FOO')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiElement(AidlTokenTypes.RBRACE)('}')