FILE
  PsiComment(AidlTokenTypes.BLOCK_COMMENT)('/*\n * Copyright (C) 2015 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */')
  PsiComment(AidlTokenTypes.COMMENT)('// This is a test case taken from the AIDL tool's codebase:')
  PsiComment(AidlTokenTypes.COMMENT)('// https://cs.android.com/android/platform/superproject/+/master:system/tools/aidl/tests/android/aidl/tests/ITestService.aidl')
  AidlPackageImpl("android.aidl.tests")
    PsiElement(AidlTokenTypes.PACKAGE_KEYWORD)('package')
    AidlQualifiedNameImpl("android.aidl.tests")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  AidlImportImpl("android.aidl.tests.BackendType")
    PsiElement(AidlTokenTypes.IMPORT_KEYWORD)('import')
    AidlQualifiedNameImpl("android.aidl.tests.BackendType")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("BackendType")
        PsiElement(AidlTokenTypes.IDENTIFIER)('BackendType')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  AidlImportImpl("android.aidl.tests.ByteEnum")
    PsiElement(AidlTokenTypes.IMPORT_KEYWORD)('import')
    AidlQualifiedNameImpl("android.aidl.tests.ByteEnum")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("ByteEnum")
        PsiElement(AidlTokenTypes.IDENTIFIER)('ByteEnum')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  AidlImportImpl("android.aidl.tests.INamedCallback")
    PsiElement(AidlTokenTypes.IMPORT_KEYWORD)('import')
    AidlQualifiedNameImpl("android.aidl.tests.INamedCallback")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("INamedCallback")
        PsiElement(AidlTokenTypes.IDENTIFIER)('INamedCallback')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  AidlImportImpl("android.aidl.tests.INewName")
    PsiElement(AidlTokenTypes.IMPORT_KEYWORD)('import')
    AidlQualifiedNameImpl("android.aidl.tests.INewName")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("INewName")
        PsiElement(AidlTokenTypes.IDENTIFIER)('INewName')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  AidlImportImpl("android.aidl.tests.IOldName")
    PsiElement(AidlTokenTypes.IMPORT_KEYWORD)('import')
    AidlQualifiedNameImpl("android.aidl.tests.IOldName")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("IOldName")
        PsiElement(AidlTokenTypes.IDENTIFIER)('IOldName')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  AidlImportImpl("android.aidl.tests.IntEnum")
    PsiElement(AidlTokenTypes.IMPORT_KEYWORD)('import')
    AidlQualifiedNameImpl("android.aidl.tests.IntEnum")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("IntEnum")
        PsiElement(AidlTokenTypes.IDENTIFIER)('IntEnum')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  AidlImportImpl("android.aidl.tests.LongEnum")
    PsiElement(AidlTokenTypes.IMPORT_KEYWORD)('import')
    AidlQualifiedNameImpl("android.aidl.tests.LongEnum")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("LongEnum")
        PsiElement(AidlTokenTypes.IDENTIFIER)('LongEnum')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  AidlImportImpl("android.aidl.tests.RecursiveList")
    PsiElement(AidlTokenTypes.IMPORT_KEYWORD)('import')
    AidlQualifiedNameImpl("android.aidl.tests.RecursiveList")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("RecursiveList")
        PsiElement(AidlTokenTypes.IDENTIFIER)('RecursiveList')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  AidlImportImpl("android.aidl.tests.StructuredParcelable")
    PsiElement(AidlTokenTypes.IMPORT_KEYWORD)('import')
    AidlQualifiedNameImpl("android.aidl.tests.StructuredParcelable")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("StructuredParcelable")
        PsiElement(AidlTokenTypes.IDENTIFIER)('StructuredParcelable')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  AidlImportImpl("android.aidl.tests.extension.ExtendableParcelable")
    PsiElement(AidlTokenTypes.IMPORT_KEYWORD)('import')
    AidlQualifiedNameImpl("android.aidl.tests.extension.ExtendableParcelable")
      AidlNameComponentImpl("android")
        PsiElement(AidlTokenTypes.IDENTIFIER)('android')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("aidl")
        PsiElement(AidlTokenTypes.IDENTIFIER)('aidl')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("tests")
        PsiElement(AidlTokenTypes.IDENTIFIER)('tests')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("extension")
        PsiElement(AidlTokenTypes.IDENTIFIER)('extension')
      PsiElement(AidlTokenTypes.DOT)('.')
      AidlNameComponentImpl("ExtendableParcelable")
        PsiElement(AidlTokenTypes.IDENTIFIER)('ExtendableParcelable')
    PsiElement(AidlTokenTypes.SEMICOLON)(';')
  PsiComment(AidlTokenTypes.BLOCK_COMMENT)('/**\n * interface comment\n */')
  AidlBodyImpl(BODY)
    AidlAnnotationElementImpl("SuppressWarnings")
      PsiElement(AidlTokenTypes.AT)('@')
      AidlQualifiedNameImpl("SuppressWarnings")
        AidlNameComponentImpl("SuppressWarnings")
          PsiElement(AidlTokenTypes.IDENTIFIER)('SuppressWarnings')
      PsiElement(AidlTokenTypes.LPAREN)('(')
      AidlNameComponentImpl("value")
        PsiElement(AidlTokenTypes.IDENTIFIER)('value')
      PsiElement(AidlTokenTypes.ASSIGN)('=')
      AidlExpressionImpl(EXPRESSION)
        PsiElement(AidlTokenTypes.LBRACE)('{')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.C_STR)('"inout-parameter"')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.C_STR)('"mixed-oneway"')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.C_STR)('"out-array"')
        PsiElement(AidlTokenTypes.RBRACE)('}')
      PsiElement(AidlTokenTypes.RPAREN)(')')
    AidlAnnotationElementImpl("SensitiveData")
      PsiElement(AidlTokenTypes.AT)('@')
      AidlQualifiedNameImpl("SensitiveData")
        AidlNameComponentImpl("SensitiveData")
          PsiElement(AidlTokenTypes.IDENTIFIER)('SensitiveData')
    AidlAnnotationElementImpl("JavaDefault")
      PsiElement(AidlTokenTypes.AT)('@')
      AidlQualifiedNameImpl("JavaDefault")
        AidlNameComponentImpl("JavaDefault")
          PsiElement(AidlTokenTypes.IDENTIFIER)('JavaDefault')
    AidlInterfaceDeclarationImpl("ITestService" as in "android.aidl.tests.ITestService")
      PsiElement(AidlTokenTypes.INTERFACE_KEYWORD)('interface')
      AidlDottedNameImpl("ITestService")
        AidlNameComponentImpl("ITestService")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ITestService')
      PsiElement(AidlTokenTypes.LBRACE)('{')
      PsiComment(AidlTokenTypes.COMMENT)('// Test that constants are accessible')
      PsiComment(AidlTokenTypes.BLOCK_COMMENT)('/**\n     * extra doc comment\n     */')
      PsiComment(AidlTokenTypes.COMMENT)('// extra line comment')
      PsiComment(AidlTokenTypes.BLOCK_COMMENT)('/*\n     * extra regular comment\n     */')
      PsiComment(AidlTokenTypes.BLOCK_COMMENT)('/**\n     * const comment\n     */')
      AidlConstantDeclarationImpl("TEST_CONSTANT")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("TEST_CONSTANT")
          PsiElement(AidlTokenTypes.IDENTIFIER)('TEST_CONSTANT')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('42')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("TEST_CONSTANT2")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("TEST_CONSTANT2")
          PsiElement(AidlTokenTypes.IDENTIFIER)('TEST_CONSTANT2')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.MINUS)('-')
          PsiElement(AidlTokenTypes.INTVALUE)('42')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("TEST_CONSTANT3")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("TEST_CONSTANT3")
          PsiElement(AidlTokenTypes.IDENTIFIER)('TEST_CONSTANT3')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.PLUS)('+')
          PsiElement(AidlTokenTypes.INTVALUE)('42')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("TEST_CONSTANT4")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("TEST_CONSTANT4")
          PsiElement(AidlTokenTypes.IDENTIFIER)('TEST_CONSTANT4')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.PLUS)('+')
          PsiElement(AidlTokenTypes.INTVALUE)('4')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("TEST_CONSTANT5")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("TEST_CONSTANT5")
          PsiElement(AidlTokenTypes.IDENTIFIER)('TEST_CONSTANT5')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.MINUS)('-')
          PsiElement(AidlTokenTypes.INTVALUE)('4')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("TEST_CONSTANT6")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("TEST_CONSTANT6")
          PsiElement(AidlTokenTypes.IDENTIFIER)('TEST_CONSTANT6')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.MINUS)('-')
          PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("TEST_CONSTANT7")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("TEST_CONSTANT7")
          PsiElement(AidlTokenTypes.IDENTIFIER)('TEST_CONSTANT7')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.PLUS)('+')
          PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("TEST_CONSTANT8")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("TEST_CONSTANT8")
          PsiElement(AidlTokenTypes.IDENTIFIER)('TEST_CONSTANT8')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("TEST_CONSTANT9")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("TEST_CONSTANT9")
          PsiElement(AidlTokenTypes.IDENTIFIER)('TEST_CONSTANT9')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.HEXVALUE)('0x56')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("TEST_CONSTANT10")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("TEST_CONSTANT10")
          PsiElement(AidlTokenTypes.IDENTIFIER)('TEST_CONSTANT10')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.HEXVALUE)('0xa5')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("TEST_CONSTANT11")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("TEST_CONSTANT11")
          PsiElement(AidlTokenTypes.IDENTIFIER)('TEST_CONSTANT11')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.HEXVALUE)('0xFA')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("TEST_CONSTANT12")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("TEST_CONSTANT12")
          PsiElement(AidlTokenTypes.IDENTIFIER)('TEST_CONSTANT12')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.HEXVALUE)('0xffffffff')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("BYTE_TEST_CONSTANT")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.BYTE_KEYWORD)('byte')
        AidlNameComponentImpl("BYTE_TEST_CONSTANT")
          PsiElement(AidlTokenTypes.IDENTIFIER)('BYTE_TEST_CONSTANT')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('17')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("LONG_TEST_CONSTANT")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.LONG_KEYWORD)('long')
        AidlNameComponentImpl("LONG_TEST_CONSTANT")
          PsiElement(AidlTokenTypes.IDENTIFIER)('LONG_TEST_CONSTANT')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('1L')
          PsiElement(AidlTokenTypes.LSHIFT)('<<')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('40')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("STRING_TEST_CONSTANT")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl("String")
          AidlQualifiedNameImpl("String")
            AidlNameComponentImpl("String")
              PsiElement(AidlTokenTypes.IDENTIFIER)('String')
        AidlNameComponentImpl("STRING_TEST_CONSTANT")
          PsiElement(AidlTokenTypes.IDENTIFIER)('STRING_TEST_CONSTANT')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.C_STR)('"foo"')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("STRING_TEST_CONSTANT2")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl("String")
          AidlQualifiedNameImpl("String")
            AidlNameComponentImpl("String")
              PsiElement(AidlTokenTypes.IDENTIFIER)('String')
        AidlNameComponentImpl("STRING_TEST_CONSTANT2")
          PsiElement(AidlTokenTypes.IDENTIFIER)('STRING_TEST_CONSTANT2')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.C_STR)('"bar"')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("STRING_TEST_CONSTANT_UTF8")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl("String")
          AidlAnnotationElementImpl("utf8InCpp")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("utf8InCpp")
              AidlNameComponentImpl("utf8InCpp")
                PsiElement(AidlTokenTypes.IDENTIFIER)('utf8InCpp')
          AidlQualifiedNameImpl("String")
            AidlNameComponentImpl("String")
              PsiElement(AidlTokenTypes.IDENTIFIER)('String')
        AidlNameComponentImpl("STRING_TEST_CONSTANT_UTF8")
          PsiElement(AidlTokenTypes.IDENTIFIER)('STRING_TEST_CONSTANT_UTF8')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.C_STR)('"baz"')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// This is to emulate a method that is added after the service is implemented.')
      PsiComment(AidlTokenTypes.COMMENT)('// So the client cannot assume that a call to this method will be successful')
      PsiComment(AidlTokenTypes.COMMENT)('// or not. However, inside the test environment, we can't build client and')
      PsiComment(AidlTokenTypes.COMMENT)('// the server with different version of this AIDL file. So, we let the server')
      PsiComment(AidlTokenTypes.COMMENT)('// actually implement this and intercept the dispatch to the method')
      PsiComment(AidlTokenTypes.COMMENT)('// inside onTransact().')
      PsiComment(AidlTokenTypes.COMMENT)('// WARNING: Must be first method.')
      PsiComment(AidlTokenTypes.COMMENT)('// This requires hard coding the transaction number. As long as this method is')
      PsiComment(AidlTokenTypes.COMMENT)('// the first in this interface, it can keep the')
      PsiComment(AidlTokenTypes.COMMENT)('// "::android::IBinder::FIRST_CALL_TRANSACTION + 0" value and allow')
      PsiComment(AidlTokenTypes.COMMENT)('// methods to be added and removed.')
      AidlMethodDeclarationImpl("UnimplementedMethod")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("UnimplementedMethod")
          PsiElement(AidlTokenTypes.IDENTIFIER)('UnimplementedMethod')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("arg")
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
          AidlNameComponentImpl("arg")
            PsiElement(AidlTokenTypes.IDENTIFIER)('arg')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.BLOCK_COMMENT)('/**\n     * @deprecated to make sure we have something in system/tools/aidl which does a compile check\n     *     of deprecated and make sure this is reflected in goldens\n     */')
      AidlMethodDeclarationImpl("Deprecated")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.VOID_KEYWORD)('void')
        AidlNameComponentImpl("Deprecated")
          PsiElement(AidlTokenTypes.IDENTIFIER)('Deprecated')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("TestOneway")
        PsiElement(AidlTokenTypes.ONEWAY_KEYWORD)('oneway')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.VOID_KEYWORD)('void')
        AidlNameComponentImpl("TestOneway")
          PsiElement(AidlTokenTypes.IDENTIFIER)('TestOneway')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// Test that primitives work as parameters and return types.')
      AidlMethodDeclarationImpl("RepeatBoolean")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.BOOLEAN_KEYWORD)('boolean')
        AidlNameComponentImpl("RepeatBoolean")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatBoolean')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("token")
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.BOOLEAN_KEYWORD)('boolean')
          AidlNameComponentImpl("token")
            PsiElement(AidlTokenTypes.IDENTIFIER)('token')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatByte")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.BYTE_KEYWORD)('byte')
        AidlNameComponentImpl("RepeatByte")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatByte')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("token")
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.BYTE_KEYWORD)('byte')
          AidlNameComponentImpl("token")
            PsiElement(AidlTokenTypes.IDENTIFIER)('token')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatChar")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.CHAR_KEYWORD)('char')
        AidlNameComponentImpl("RepeatChar")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatChar')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("token")
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.CHAR_KEYWORD)('char')
          AidlNameComponentImpl("token")
            PsiElement(AidlTokenTypes.IDENTIFIER)('token')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatInt")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("RepeatInt")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatInt')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("token")
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
          AidlNameComponentImpl("token")
            PsiElement(AidlTokenTypes.IDENTIFIER)('token')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatLong")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.LONG_KEYWORD)('long')
        AidlNameComponentImpl("RepeatLong")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatLong')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("token")
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.LONG_KEYWORD)('long')
          AidlNameComponentImpl("token")
            PsiElement(AidlTokenTypes.IDENTIFIER)('token')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatFloat")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.FLOAT_KEYWORD)('float')
        AidlNameComponentImpl("RepeatFloat")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatFloat')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("token")
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.FLOAT_KEYWORD)('float')
          AidlNameComponentImpl("token")
            PsiElement(AidlTokenTypes.IDENTIFIER)('token')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatDouble")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.DOUBLE_KEYWORD)('double')
        AidlNameComponentImpl("RepeatDouble")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatDouble')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("token")
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.DOUBLE_KEYWORD)('double')
          AidlNameComponentImpl("token")
            PsiElement(AidlTokenTypes.IDENTIFIER)('token')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatString")
        AidlTypeElementImpl("String")
          AidlQualifiedNameImpl("String")
            AidlNameComponentImpl("String")
              PsiElement(AidlTokenTypes.IDENTIFIER)('String')
        AidlNameComponentImpl("RepeatString")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatString')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("token")
          AidlTypeElementImpl("String")
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
          AidlNameComponentImpl("token")
            PsiElement(AidlTokenTypes.IDENTIFIER)('token')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatByteEnum")
        AidlTypeElementImpl("ByteEnum")
          AidlQualifiedNameImpl("ByteEnum")
            AidlNameComponentImpl("ByteEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('ByteEnum')
        AidlNameComponentImpl("RepeatByteEnum")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatByteEnum')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("token")
          AidlTypeElementImpl("ByteEnum")
            AidlQualifiedNameImpl("ByteEnum")
              AidlNameComponentImpl("ByteEnum")
                PsiElement(AidlTokenTypes.IDENTIFIER)('ByteEnum')
          AidlNameComponentImpl("token")
            PsiElement(AidlTokenTypes.IDENTIFIER)('token')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatIntEnum")
        AidlTypeElementImpl("IntEnum")
          AidlQualifiedNameImpl("IntEnum")
            AidlNameComponentImpl("IntEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('IntEnum')
        AidlNameComponentImpl("RepeatIntEnum")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatIntEnum')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("token")
          AidlTypeElementImpl("IntEnum")
            AidlQualifiedNameImpl("IntEnum")
              AidlNameComponentImpl("IntEnum")
                PsiElement(AidlTokenTypes.IDENTIFIER)('IntEnum')
          AidlNameComponentImpl("token")
            PsiElement(AidlTokenTypes.IDENTIFIER)('token')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatLongEnum")
        AidlTypeElementImpl("LongEnum")
          AidlQualifiedNameImpl("LongEnum")
            AidlNameComponentImpl("LongEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('LongEnum')
        AidlNameComponentImpl("RepeatLongEnum")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatLongEnum')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("token")
          AidlTypeElementImpl("LongEnum")
            AidlQualifiedNameImpl("LongEnum")
              AidlNameComponentImpl("LongEnum")
                PsiElement(AidlTokenTypes.IDENTIFIER)('LongEnum')
          AidlNameComponentImpl("token")
            PsiElement(AidlTokenTypes.IDENTIFIER)('token')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// Test that arrays work as parameters and return types.')
      AidlMethodDeclarationImpl("ReverseBoolean")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.BOOLEAN_KEYWORD)('boolean')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("ReverseBoolean")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseBoolean')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.BOOLEAN_KEYWORD)('boolean')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("repeated")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.BOOLEAN_KEYWORD)('boolean')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("repeated")
            PsiElement(AidlTokenTypes.IDENTIFIER)('repeated')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("ReverseByte")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.BYTE_KEYWORD)('byte')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("ReverseByte")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseByte')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.BYTE_KEYWORD)('byte')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("repeated")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.BYTE_KEYWORD)('byte')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("repeated")
            PsiElement(AidlTokenTypes.IDENTIFIER)('repeated')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("ReverseChar")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.CHAR_KEYWORD)('char')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("ReverseChar")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseChar')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.CHAR_KEYWORD)('char')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("repeated")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.CHAR_KEYWORD)('char')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("repeated")
            PsiElement(AidlTokenTypes.IDENTIFIER)('repeated')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("ReverseInt")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("ReverseInt")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseInt')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("repeated")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("repeated")
            PsiElement(AidlTokenTypes.IDENTIFIER)('repeated')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("ReverseLong")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.LONG_KEYWORD)('long')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("ReverseLong")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseLong')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.LONG_KEYWORD)('long')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("repeated")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.LONG_KEYWORD)('long')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("repeated")
            PsiElement(AidlTokenTypes.IDENTIFIER)('repeated')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("ReverseFloat")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.FLOAT_KEYWORD)('float')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("ReverseFloat")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseFloat')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.FLOAT_KEYWORD)('float')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("repeated")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.FLOAT_KEYWORD)('float')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("repeated")
            PsiElement(AidlTokenTypes.IDENTIFIER)('repeated')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("ReverseDouble")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.DOUBLE_KEYWORD)('double')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("ReverseDouble")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseDouble')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.DOUBLE_KEYWORD)('double')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("repeated")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.DOUBLE_KEYWORD)('double')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("repeated")
            PsiElement(AidlTokenTypes.IDENTIFIER)('repeated')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("ReverseString")
        AidlTypeElementImpl("String")
          AidlQualifiedNameImpl("String")
            AidlNameComponentImpl("String")
              PsiElement(AidlTokenTypes.IDENTIFIER)('String')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("ReverseString")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseString')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("String")
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("repeated")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl("String")
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("repeated")
            PsiElement(AidlTokenTypes.IDENTIFIER)('repeated')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("ReverseByteEnum")
        AidlTypeElementImpl("ByteEnum")
          AidlQualifiedNameImpl("ByteEnum")
            AidlNameComponentImpl("ByteEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('ByteEnum')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("ReverseByteEnum")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseByteEnum')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("ByteEnum")
            AidlQualifiedNameImpl("ByteEnum")
              AidlNameComponentImpl("ByteEnum")
                PsiElement(AidlTokenTypes.IDENTIFIER)('ByteEnum')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("repeated")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl("ByteEnum")
            AidlQualifiedNameImpl("ByteEnum")
              AidlNameComponentImpl("ByteEnum")
                PsiElement(AidlTokenTypes.IDENTIFIER)('ByteEnum')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("repeated")
            PsiElement(AidlTokenTypes.IDENTIFIER)('repeated')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("ReverseIntEnum")
        AidlTypeElementImpl("IntEnum")
          AidlQualifiedNameImpl("IntEnum")
            AidlNameComponentImpl("IntEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('IntEnum')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("ReverseIntEnum")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseIntEnum')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("IntEnum")
            AidlQualifiedNameImpl("IntEnum")
              AidlNameComponentImpl("IntEnum")
                PsiElement(AidlTokenTypes.IDENTIFIER)('IntEnum')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("repeated")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl("IntEnum")
            AidlQualifiedNameImpl("IntEnum")
              AidlNameComponentImpl("IntEnum")
                PsiElement(AidlTokenTypes.IDENTIFIER)('IntEnum')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("repeated")
            PsiElement(AidlTokenTypes.IDENTIFIER)('repeated')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("ReverseLongEnum")
        AidlTypeElementImpl("LongEnum")
          AidlQualifiedNameImpl("LongEnum")
            AidlNameComponentImpl("LongEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('LongEnum')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("ReverseLongEnum")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseLongEnum')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("LongEnum")
            AidlQualifiedNameImpl("LongEnum")
              AidlNameComponentImpl("LongEnum")
                PsiElement(AidlTokenTypes.IDENTIFIER)('LongEnum')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("repeated")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl("LongEnum")
            AidlQualifiedNameImpl("LongEnum")
              AidlNameComponentImpl("LongEnum")
                PsiElement(AidlTokenTypes.IDENTIFIER)('LongEnum')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("repeated")
            PsiElement(AidlTokenTypes.IDENTIFIER)('repeated')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// Test that clients can send and receive Binders.')
      AidlMethodDeclarationImpl("GetOtherTestService")
        AidlTypeElementImpl("INamedCallback")
          AidlAnnotationElementImpl("PropagateAllowBlocking")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("PropagateAllowBlocking")
              AidlNameComponentImpl("PropagateAllowBlocking")
                PsiElement(AidlTokenTypes.IDENTIFIER)('PropagateAllowBlocking')
          AidlQualifiedNameImpl("INamedCallback")
            AidlNameComponentImpl("INamedCallback")
              PsiElement(AidlTokenTypes.IDENTIFIER)('INamedCallback')
        AidlNameComponentImpl("GetOtherTestService")
          PsiElement(AidlTokenTypes.IDENTIFIER)('GetOtherTestService')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("name")
          AidlTypeElementImpl("String")
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
          AidlNameComponentImpl("name")
            PsiElement(AidlTokenTypes.IDENTIFIER)('name')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("VerifyName")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.BOOLEAN_KEYWORD)('boolean')
        AidlNameComponentImpl("VerifyName")
          PsiElement(AidlTokenTypes.IDENTIFIER)('VerifyName')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("service")
          AidlTypeElementImpl("INamedCallback")
            AidlQualifiedNameImpl("INamedCallback")
              AidlNameComponentImpl("INamedCallback")
                PsiElement(AidlTokenTypes.IDENTIFIER)('INamedCallback')
          AidlNameComponentImpl("service")
            PsiElement(AidlTokenTypes.IDENTIFIER)('service')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("name")
          AidlTypeElementImpl("String")
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
          AidlNameComponentImpl("name")
            PsiElement(AidlTokenTypes.IDENTIFIER)('name')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("GetInterfaceArray")
        AidlTypeElementImpl("INamedCallback")
          AidlQualifiedNameImpl("INamedCallback")
            AidlNameComponentImpl("INamedCallback")
              PsiElement(AidlTokenTypes.IDENTIFIER)('INamedCallback')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("GetInterfaceArray")
          PsiElement(AidlTokenTypes.IDENTIFIER)('GetInterfaceArray')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("names")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("String")
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("names")
            PsiElement(AidlTokenTypes.IDENTIFIER)('names')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("VerifyNamesWithInterfaceArray")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.BOOLEAN_KEYWORD)('boolean')
        AidlNameComponentImpl("VerifyNamesWithInterfaceArray")
          PsiElement(AidlTokenTypes.IDENTIFIER)('VerifyNamesWithInterfaceArray')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("services")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("INamedCallback")
            AidlQualifiedNameImpl("INamedCallback")
              AidlNameComponentImpl("INamedCallback")
                PsiElement(AidlTokenTypes.IDENTIFIER)('INamedCallback')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("services")
            PsiElement(AidlTokenTypes.IDENTIFIER)('services')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("names")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("String")
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("names")
            PsiElement(AidlTokenTypes.IDENTIFIER)('names')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("GetNullableInterfaceArray")
        AidlTypeElementImpl("INamedCallback")
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlQualifiedNameImpl("INamedCallback")
            AidlNameComponentImpl("INamedCallback")
              PsiElement(AidlTokenTypes.IDENTIFIER)('INamedCallback')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("GetNullableInterfaceArray")
          PsiElement(AidlTokenTypes.IDENTIFIER)('GetNullableInterfaceArray')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("names")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("String")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("names")
            PsiElement(AidlTokenTypes.IDENTIFIER)('names')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("VerifyNamesWithNullableInterfaceArray")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.BOOLEAN_KEYWORD)('boolean')
        AidlNameComponentImpl("VerifyNamesWithNullableInterfaceArray")
          PsiElement(AidlTokenTypes.IDENTIFIER)('VerifyNamesWithNullableInterfaceArray')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("services")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("INamedCallback")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("INamedCallback")
              AidlNameComponentImpl("INamedCallback")
                PsiElement(AidlTokenTypes.IDENTIFIER)('INamedCallback')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("services")
            PsiElement(AidlTokenTypes.IDENTIFIER)('services')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("names")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("String")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("names")
            PsiElement(AidlTokenTypes.IDENTIFIER)('names')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("GetInterfaceList")
        AidlTypeElementImpl("List")
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlQualifiedNameImpl("List")
            AidlNameComponentImpl("List")
              PsiElement(AidlTokenTypes.IDENTIFIER)('List')
          PsiElement(AidlTokenTypes.LT)('<')
          AidlTypeElementImpl("INamedCallback")
            AidlQualifiedNameImpl("INamedCallback")
              AidlNameComponentImpl("INamedCallback")
                PsiElement(AidlTokenTypes.IDENTIFIER)('INamedCallback')
          PsiElement(AidlTokenTypes.GT)('>')
        AidlNameComponentImpl("GetInterfaceList")
          PsiElement(AidlTokenTypes.IDENTIFIER)('GetInterfaceList')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("names")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("String")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("names")
            PsiElement(AidlTokenTypes.IDENTIFIER)('names')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("VerifyNamesWithInterfaceList")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.BOOLEAN_KEYWORD)('boolean')
        AidlNameComponentImpl("VerifyNamesWithInterfaceList")
          PsiElement(AidlTokenTypes.IDENTIFIER)('VerifyNamesWithInterfaceList')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("services")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("List")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("List")
              AidlNameComponentImpl("List")
                PsiElement(AidlTokenTypes.IDENTIFIER)('List')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlTypeElementImpl("INamedCallback")
              AidlQualifiedNameImpl("INamedCallback")
                AidlNameComponentImpl("INamedCallback")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('INamedCallback')
            PsiElement(AidlTokenTypes.GT)('>')
          AidlNameComponentImpl("services")
            PsiElement(AidlTokenTypes.IDENTIFIER)('services')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("names")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("String")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("names")
            PsiElement(AidlTokenTypes.IDENTIFIER)('names')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// Test that List<T> types work correctly.')
      AidlMethodDeclarationImpl("ReverseStringList")
        AidlTypeElementImpl("List")
          AidlQualifiedNameImpl("List")
            AidlNameComponentImpl("List")
              PsiElement(AidlTokenTypes.IDENTIFIER)('List')
          PsiElement(AidlTokenTypes.LT)('<')
          AidlTypeElementImpl("String")
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
          PsiElement(AidlTokenTypes.GT)('>')
        AidlNameComponentImpl("ReverseStringList")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseStringList')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("List")
            AidlQualifiedNameImpl("List")
              AidlNameComponentImpl("List")
                PsiElement(AidlTokenTypes.IDENTIFIER)('List')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlTypeElementImpl("String")
              AidlQualifiedNameImpl("String")
                AidlNameComponentImpl("String")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('String')
            PsiElement(AidlTokenTypes.GT)('>')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("repeated")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl("List")
            AidlQualifiedNameImpl("List")
              AidlNameComponentImpl("List")
                PsiElement(AidlTokenTypes.IDENTIFIER)('List')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlTypeElementImpl("String")
              AidlQualifiedNameImpl("String")
                AidlNameComponentImpl("String")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('String')
            PsiElement(AidlTokenTypes.GT)('>')
          AidlNameComponentImpl("repeated")
            PsiElement(AidlTokenTypes.IDENTIFIER)('repeated')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatParcelFileDescriptor")
        AidlTypeElementImpl("ParcelFileDescriptor")
          AidlQualifiedNameImpl("ParcelFileDescriptor")
            AidlNameComponentImpl("ParcelFileDescriptor")
              PsiElement(AidlTokenTypes.IDENTIFIER)('ParcelFileDescriptor')
        AidlNameComponentImpl("RepeatParcelFileDescriptor")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatParcelFileDescriptor')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("read")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("ParcelFileDescriptor")
            AidlQualifiedNameImpl("ParcelFileDescriptor")
              AidlNameComponentImpl("ParcelFileDescriptor")
                PsiElement(AidlTokenTypes.IDENTIFIER)('ParcelFileDescriptor')
          AidlNameComponentImpl("read")
            PsiElement(AidlTokenTypes.IDENTIFIER)('read')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("ReverseParcelFileDescriptorArray")
        AidlTypeElementImpl("ParcelFileDescriptor")
          AidlQualifiedNameImpl("ParcelFileDescriptor")
            AidlNameComponentImpl("ParcelFileDescriptor")
              PsiElement(AidlTokenTypes.IDENTIFIER)('ParcelFileDescriptor')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("ReverseParcelFileDescriptorArray")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseParcelFileDescriptorArray')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("ParcelFileDescriptor")
            AidlQualifiedNameImpl("ParcelFileDescriptor")
              AidlNameComponentImpl("ParcelFileDescriptor")
                PsiElement(AidlTokenTypes.IDENTIFIER)('ParcelFileDescriptor')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("repeated")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl("ParcelFileDescriptor")
            AidlQualifiedNameImpl("ParcelFileDescriptor")
              AidlNameComponentImpl("ParcelFileDescriptor")
                PsiElement(AidlTokenTypes.IDENTIFIER)('ParcelFileDescriptor')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("repeated")
            PsiElement(AidlTokenTypes.IDENTIFIER)('repeated')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// Test that service specific exceptions work correctly.')
      AidlMethodDeclarationImpl("ThrowServiceException")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.VOID_KEYWORD)('void')
        AidlNameComponentImpl("ThrowServiceException")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ThrowServiceException')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("code")
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
          AidlNameComponentImpl("code")
            PsiElement(AidlTokenTypes.IDENTIFIER)('code')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// Test nullability')
      AidlMethodDeclarationImpl("RepeatNullableIntArray")
        AidlTypeElementImpl(TYPE_ELEMENT)
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("RepeatNullableIntArray")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatNullableIntArray')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl(TYPE_ELEMENT)
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatNullableByteEnumArray")
        AidlTypeElementImpl("ByteEnum")
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlQualifiedNameImpl("ByteEnum")
            AidlNameComponentImpl("ByteEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('ByteEnum')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("RepeatNullableByteEnumArray")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatNullableByteEnumArray')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("ByteEnum")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("ByteEnum")
              AidlNameComponentImpl("ByteEnum")
                PsiElement(AidlTokenTypes.IDENTIFIER)('ByteEnum')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatNullableIntEnumArray")
        AidlTypeElementImpl("IntEnum")
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlQualifiedNameImpl("IntEnum")
            AidlNameComponentImpl("IntEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('IntEnum')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("RepeatNullableIntEnumArray")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatNullableIntEnumArray')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("IntEnum")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("IntEnum")
              AidlNameComponentImpl("IntEnum")
                PsiElement(AidlTokenTypes.IDENTIFIER)('IntEnum')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatNullableLongEnumArray")
        AidlTypeElementImpl("LongEnum")
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlQualifiedNameImpl("LongEnum")
            AidlNameComponentImpl("LongEnum")
              PsiElement(AidlTokenTypes.IDENTIFIER)('LongEnum')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("RepeatNullableLongEnumArray")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatNullableLongEnumArray')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("LongEnum")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("LongEnum")
              AidlNameComponentImpl("LongEnum")
                PsiElement(AidlTokenTypes.IDENTIFIER)('LongEnum')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatNullableString")
        AidlTypeElementImpl("String")
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlQualifiedNameImpl("String")
            AidlNameComponentImpl("String")
              PsiElement(AidlTokenTypes.IDENTIFIER)('String')
        AidlNameComponentImpl("RepeatNullableString")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatNullableString')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("String")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatNullableStringList")
        AidlTypeElementImpl("List")
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlQualifiedNameImpl("List")
            AidlNameComponentImpl("List")
              PsiElement(AidlTokenTypes.IDENTIFIER)('List')
          PsiElement(AidlTokenTypes.LT)('<')
          AidlTypeElementImpl("String")
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
          PsiElement(AidlTokenTypes.GT)('>')
        AidlNameComponentImpl("RepeatNullableStringList")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatNullableStringList')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("List")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("List")
              AidlNameComponentImpl("List")
                PsiElement(AidlTokenTypes.IDENTIFIER)('List')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlTypeElementImpl("String")
              AidlQualifiedNameImpl("String")
                AidlNameComponentImpl("String")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('String')
            PsiElement(AidlTokenTypes.GT)('>')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// Small empty parcelable for nullability check')
      AidlAnnotationElementImpl("JavaDerive")
        PsiElement(AidlTokenTypes.AT)('@')
        AidlQualifiedNameImpl("JavaDerive")
          AidlNameComponentImpl("JavaDerive")
            PsiElement(AidlTokenTypes.IDENTIFIER)('JavaDerive')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlNameComponentImpl("equals")
          PsiElement(AidlTokenTypes.IDENTIFIER)('equals')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.TRUE_KEYWORD)('true')
        PsiElement(AidlTokenTypes.RPAREN)(')')
      AidlAnnotationElementImpl("RustDerive")
        PsiElement(AidlTokenTypes.AT)('@')
        AidlQualifiedNameImpl("RustDerive")
          AidlNameComponentImpl("RustDerive")
            PsiElement(AidlTokenTypes.IDENTIFIER)('RustDerive')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlNameComponentImpl("Clone")
          PsiElement(AidlTokenTypes.IDENTIFIER)('Clone')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.TRUE_KEYWORD)('true')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlNameComponentImpl("PartialEq")
          PsiElement(AidlTokenTypes.IDENTIFIER)('PartialEq')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.TRUE_KEYWORD)('true')
        PsiElement(AidlTokenTypes.RPAREN)(')')
      AidlParcelableDeclarationImpl("Empty" as in "android.aidl.tests.ITestService.Empty")
        PsiElement(AidlTokenTypes.PARCELABLE_KEYWORD)('parcelable')
        AidlDottedNameImpl("Empty")
          AidlNameComponentImpl("Empty")
            PsiElement(AidlTokenTypes.IDENTIFIER)('Empty')
        PsiElement(AidlTokenTypes.LBRACE)('{')
        PsiElement(AidlTokenTypes.RBRACE)('}')
      AidlMethodDeclarationImpl("RepeatNullableParcelable")
        AidlTypeElementImpl("Empty")
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlQualifiedNameImpl("Empty")
            AidlNameComponentImpl("Empty")
              PsiElement(AidlTokenTypes.IDENTIFIER)('Empty')
        AidlNameComponentImpl("RepeatNullableParcelable")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatNullableParcelable')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("Empty")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("Empty")
              AidlNameComponentImpl("Empty")
                PsiElement(AidlTokenTypes.IDENTIFIER)('Empty')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatNullableParcelableArray")
        AidlTypeElementImpl("Empty")
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlQualifiedNameImpl("Empty")
            AidlNameComponentImpl("Empty")
              PsiElement(AidlTokenTypes.IDENTIFIER)('Empty')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("RepeatNullableParcelableArray")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatNullableParcelableArray')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("Empty")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("Empty")
              AidlNameComponentImpl("Empty")
                PsiElement(AidlTokenTypes.IDENTIFIER)('Empty')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatNullableParcelableList")
        AidlTypeElementImpl("List")
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlQualifiedNameImpl("List")
            AidlNameComponentImpl("List")
              PsiElement(AidlTokenTypes.IDENTIFIER)('List')
          PsiElement(AidlTokenTypes.LT)('<')
          AidlTypeElementImpl("Empty")
            AidlQualifiedNameImpl("Empty")
              AidlNameComponentImpl("Empty")
                PsiElement(AidlTokenTypes.IDENTIFIER)('Empty')
          PsiElement(AidlTokenTypes.GT)('>')
        AidlNameComponentImpl("RepeatNullableParcelableList")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatNullableParcelableList')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("List")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("List")
              AidlNameComponentImpl("List")
                PsiElement(AidlTokenTypes.IDENTIFIER)('List')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlTypeElementImpl("Empty")
              AidlQualifiedNameImpl("Empty")
                AidlNameComponentImpl("Empty")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('Empty')
            PsiElement(AidlTokenTypes.GT)('>')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("TakesAnIBinder")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.VOID_KEYWORD)('void')
        AidlNameComponentImpl("TakesAnIBinder")
          PsiElement(AidlTokenTypes.IDENTIFIER)('TakesAnIBinder')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("IBinder")
            AidlQualifiedNameImpl("IBinder")
              AidlNameComponentImpl("IBinder")
                PsiElement(AidlTokenTypes.IDENTIFIER)('IBinder')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("TakesANullableIBinder")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.VOID_KEYWORD)('void')
        AidlNameComponentImpl("TakesANullableIBinder")
          PsiElement(AidlTokenTypes.IDENTIFIER)('TakesANullableIBinder')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("IBinder")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("IBinder")
              AidlNameComponentImpl("IBinder")
                PsiElement(AidlTokenTypes.IDENTIFIER)('IBinder')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("TakesAnIBinderList")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.VOID_KEYWORD)('void')
        AidlNameComponentImpl("TakesAnIBinderList")
          PsiElement(AidlTokenTypes.IDENTIFIER)('TakesAnIBinderList')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("List")
            AidlQualifiedNameImpl("List")
              AidlNameComponentImpl("List")
                PsiElement(AidlTokenTypes.IDENTIFIER)('List')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlTypeElementImpl("IBinder")
              AidlQualifiedNameImpl("IBinder")
                AidlNameComponentImpl("IBinder")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('IBinder')
            PsiElement(AidlTokenTypes.GT)('>')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("TakesANullableIBinderList")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.VOID_KEYWORD)('void')
        AidlNameComponentImpl("TakesANullableIBinderList")
          PsiElement(AidlTokenTypes.IDENTIFIER)('TakesANullableIBinderList')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("List")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("List")
              AidlNameComponentImpl("List")
                PsiElement(AidlTokenTypes.IDENTIFIER)('List')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlTypeElementImpl("IBinder")
              AidlQualifiedNameImpl("IBinder")
                AidlNameComponentImpl("IBinder")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('IBinder')
            PsiElement(AidlTokenTypes.GT)('>')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// Test utf8 decoding from utf16 wire format')
      AidlMethodDeclarationImpl("RepeatUtf8CppString")
        AidlTypeElementImpl("String")
          AidlAnnotationElementImpl("utf8InCpp")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("utf8InCpp")
              AidlNameComponentImpl("utf8InCpp")
                PsiElement(AidlTokenTypes.IDENTIFIER)('utf8InCpp')
          AidlQualifiedNameImpl("String")
            AidlNameComponentImpl("String")
              PsiElement(AidlTokenTypes.IDENTIFIER)('String')
        AidlNameComponentImpl("RepeatUtf8CppString")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatUtf8CppString')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("token")
          AidlTypeElementImpl("String")
            AidlAnnotationElementImpl("utf8InCpp")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("utf8InCpp")
                AidlNameComponentImpl("utf8InCpp")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('utf8InCpp')
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
          AidlNameComponentImpl("token")
            PsiElement(AidlTokenTypes.IDENTIFIER)('token')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatNullableUtf8CppString")
        AidlTypeElementImpl("String")
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlAnnotationElementImpl("utf8InCpp")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("utf8InCpp")
              AidlNameComponentImpl("utf8InCpp")
                PsiElement(AidlTokenTypes.IDENTIFIER)('utf8InCpp')
          AidlQualifiedNameImpl("String")
            AidlNameComponentImpl("String")
              PsiElement(AidlTokenTypes.IDENTIFIER)('String')
        AidlNameComponentImpl("RepeatNullableUtf8CppString")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatNullableUtf8CppString')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("token")
          AidlTypeElementImpl("String")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlAnnotationElementImpl("utf8InCpp")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("utf8InCpp")
                AidlNameComponentImpl("utf8InCpp")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('utf8InCpp')
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
          AidlNameComponentImpl("token")
            PsiElement(AidlTokenTypes.IDENTIFIER)('token')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("ReverseUtf8CppString")
        AidlTypeElementImpl("String")
          AidlAnnotationElementImpl("utf8InCpp")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("utf8InCpp")
              AidlNameComponentImpl("utf8InCpp")
                PsiElement(AidlTokenTypes.IDENTIFIER)('utf8InCpp')
          AidlQualifiedNameImpl("String")
            AidlNameComponentImpl("String")
              PsiElement(AidlTokenTypes.IDENTIFIER)('String')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("ReverseUtf8CppString")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseUtf8CppString')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("String")
            AidlAnnotationElementImpl("utf8InCpp")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("utf8InCpp")
                AidlNameComponentImpl("utf8InCpp")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('utf8InCpp')
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("repeated")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl("String")
            AidlAnnotationElementImpl("utf8InCpp")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("utf8InCpp")
                AidlNameComponentImpl("utf8InCpp")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('utf8InCpp')
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("repeated")
            PsiElement(AidlTokenTypes.IDENTIFIER)('repeated')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("ReverseNullableUtf8CppString")
        AidlTypeElementImpl("String")
          AidlAnnotationElementImpl("SuppressWarnings")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("SuppressWarnings")
              AidlNameComponentImpl("SuppressWarnings")
                PsiElement(AidlTokenTypes.IDENTIFIER)('SuppressWarnings')
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlNameComponentImpl("value")
              PsiElement(AidlTokenTypes.IDENTIFIER)('value')
            PsiElement(AidlTokenTypes.ASSIGN)('=')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.LBRACE)('{')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.C_STR)('"out-nullable"')
              PsiElement(AidlTokenTypes.RBRACE)('}')
            PsiElement(AidlTokenTypes.RPAREN)(')')
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlAnnotationElementImpl("utf8InCpp")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("utf8InCpp")
              AidlNameComponentImpl("utf8InCpp")
                PsiElement(AidlTokenTypes.IDENTIFIER)('utf8InCpp')
          AidlQualifiedNameImpl("String")
            AidlNameComponentImpl("String")
              PsiElement(AidlTokenTypes.IDENTIFIER)('String')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("ReverseNullableUtf8CppString")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseNullableUtf8CppString')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("String")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlAnnotationElementImpl("utf8InCpp")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("utf8InCpp")
                AidlNameComponentImpl("utf8InCpp")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('utf8InCpp')
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("repeated")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl("String")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlAnnotationElementImpl("utf8InCpp")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("utf8InCpp")
                AidlNameComponentImpl("utf8InCpp")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('utf8InCpp')
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("repeated")
            PsiElement(AidlTokenTypes.IDENTIFIER)('repeated')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("ReverseUtf8CppStringList")
        AidlTypeElementImpl("List")
          AidlAnnotationElementImpl("SuppressWarnings")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("SuppressWarnings")
              AidlNameComponentImpl("SuppressWarnings")
                PsiElement(AidlTokenTypes.IDENTIFIER)('SuppressWarnings')
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlNameComponentImpl("value")
              PsiElement(AidlTokenTypes.IDENTIFIER)('value')
            PsiElement(AidlTokenTypes.ASSIGN)('=')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.LBRACE)('{')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.C_STR)('"out-nullable"')
              PsiElement(AidlTokenTypes.RBRACE)('}')
            PsiElement(AidlTokenTypes.RPAREN)(')')
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlAnnotationElementImpl("utf8InCpp")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("utf8InCpp")
              AidlNameComponentImpl("utf8InCpp")
                PsiElement(AidlTokenTypes.IDENTIFIER)('utf8InCpp')
          AidlQualifiedNameImpl("List")
            AidlNameComponentImpl("List")
              PsiElement(AidlTokenTypes.IDENTIFIER)('List')
          PsiElement(AidlTokenTypes.LT)('<')
          AidlTypeElementImpl("String")
            AidlQualifiedNameImpl("String")
              AidlNameComponentImpl("String")
                PsiElement(AidlTokenTypes.IDENTIFIER)('String')
          PsiElement(AidlTokenTypes.GT)('>')
        AidlNameComponentImpl("ReverseUtf8CppStringList")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseUtf8CppStringList')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("List")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlAnnotationElementImpl("utf8InCpp")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("utf8InCpp")
                AidlNameComponentImpl("utf8InCpp")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('utf8InCpp')
            AidlQualifiedNameImpl("List")
              AidlNameComponentImpl("List")
                PsiElement(AidlTokenTypes.IDENTIFIER)('List')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlTypeElementImpl("String")
              AidlQualifiedNameImpl("String")
                AidlNameComponentImpl("String")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('String')
            PsiElement(AidlTokenTypes.GT)('>')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("repeated")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl("List")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlAnnotationElementImpl("utf8InCpp")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("utf8InCpp")
                AidlNameComponentImpl("utf8InCpp")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('utf8InCpp')
            AidlQualifiedNameImpl("List")
              AidlNameComponentImpl("List")
                PsiElement(AidlTokenTypes.IDENTIFIER)('List')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlTypeElementImpl("String")
              AidlQualifiedNameImpl("String")
                AidlNameComponentImpl("String")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('String')
            PsiElement(AidlTokenTypes.GT)('>')
          AidlNameComponentImpl("repeated")
            PsiElement(AidlTokenTypes.IDENTIFIER)('repeated')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.BLOCK_COMMENT)('/**\n     * comment before annotation\n     */')
      AidlMethodDeclarationImpl("GetCallback")
        AidlTypeElementImpl("INamedCallback")
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlQualifiedNameImpl("INamedCallback")
            AidlNameComponentImpl("INamedCallback")
              PsiElement(AidlTokenTypes.IDENTIFIER)('INamedCallback')
        AidlNameComponentImpl("GetCallback")
          PsiElement(AidlTokenTypes.IDENTIFIER)('GetCallback')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("return_null")
          AidlTypeElementImpl(TYPE_ELEMENT)
            PsiElement(AidlTokenTypes.BOOLEAN_KEYWORD)('boolean')
          AidlNameComponentImpl("return_null")
            PsiElement(AidlTokenTypes.IDENTIFIER)('return_null')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// Since this paracelable has clearly defined default values, it would be')
      PsiComment(AidlTokenTypes.COMMENT)('// inefficient to use an IPC to fill it out in practice.')
      AidlMethodDeclarationImpl("FillOutStructuredParcelable")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.VOID_KEYWORD)('void')
        AidlNameComponentImpl("FillOutStructuredParcelable")
          PsiElement(AidlTokenTypes.IDENTIFIER)('FillOutStructuredParcelable')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("parcel")
          PsiElement(AidlTokenTypes.INOUT_KEYWORD)('inout')
          AidlTypeElementImpl("StructuredParcelable")
            AidlQualifiedNameImpl("StructuredParcelable")
              AidlNameComponentImpl("StructuredParcelable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('StructuredParcelable')
          AidlNameComponentImpl("parcel")
            PsiElement(AidlTokenTypes.IDENTIFIER)('parcel')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("RepeatExtendableParcelable")
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.VOID_KEYWORD)('void')
        AidlNameComponentImpl("RepeatExtendableParcelable")
          PsiElement(AidlTokenTypes.IDENTIFIER)('RepeatExtendableParcelable')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("ep")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("ExtendableParcelable")
            AidlQualifiedNameImpl("ExtendableParcelable")
              AidlNameComponentImpl("ExtendableParcelable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('ExtendableParcelable')
          AidlNameComponentImpl("ep")
            PsiElement(AidlTokenTypes.IDENTIFIER)('ep')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("ep2")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl("ExtendableParcelable")
            AidlQualifiedNameImpl("ExtendableParcelable")
              AidlNameComponentImpl("ExtendableParcelable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('ExtendableParcelable')
          AidlNameComponentImpl("ep2")
            PsiElement(AidlTokenTypes.IDENTIFIER)('ep2')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("ReverseList")
        AidlTypeElementImpl("RecursiveList")
          AidlQualifiedNameImpl("RecursiveList")
            AidlNameComponentImpl("RecursiveList")
              PsiElement(AidlTokenTypes.IDENTIFIER)('RecursiveList')
        AidlNameComponentImpl("ReverseList")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseList')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("list")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("RecursiveList")
            AidlQualifiedNameImpl("RecursiveList")
              AidlNameComponentImpl("RecursiveList")
                PsiElement(AidlTokenTypes.IDENTIFIER)('RecursiveList')
          AidlNameComponentImpl("list")
            PsiElement(AidlTokenTypes.IDENTIFIER)('list')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("ReverseIBinderArray")
        AidlTypeElementImpl("IBinder")
          AidlQualifiedNameImpl("IBinder")
            AidlNameComponentImpl("IBinder")
              PsiElement(AidlTokenTypes.IDENTIFIER)('IBinder')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("ReverseIBinderArray")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseIBinderArray')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("IBinder")
            AidlQualifiedNameImpl("IBinder")
              AidlNameComponentImpl("IBinder")
                PsiElement(AidlTokenTypes.IDENTIFIER)('IBinder')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("repeated")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl("IBinder")
            AidlQualifiedNameImpl("IBinder")
              AidlNameComponentImpl("IBinder")
                PsiElement(AidlTokenTypes.IDENTIFIER)('IBinder')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("repeated")
            PsiElement(AidlTokenTypes.IDENTIFIER)('repeated')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("ReverseNullableIBinderArray")
        AidlTypeElementImpl("IBinder")
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlQualifiedNameImpl("IBinder")
            AidlNameComponentImpl("IBinder")
              PsiElement(AidlTokenTypes.IDENTIFIER)('IBinder')
          PsiElement(AidlTokenTypes.LBRACKET)('[')
          PsiElement(AidlTokenTypes.RBRACKET)(']')
        AidlNameComponentImpl("ReverseNullableIBinderArray")
          PsiElement(AidlTokenTypes.IDENTIFIER)('ReverseNullableIBinderArray')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        AidlParameterImpl("input")
          PsiElement(AidlTokenTypes.IN_KEYWORD)('in')
          AidlTypeElementImpl("IBinder")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("IBinder")
              AidlNameComponentImpl("IBinder")
                PsiElement(AidlTokenTypes.IDENTIFIER)('IBinder')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("input")
            PsiElement(AidlTokenTypes.IDENTIFIER)('input')
        PsiElement(AidlTokenTypes.COMMA)(',')
        AidlParameterImpl("repeated")
          PsiElement(AidlTokenTypes.OUT_KEYWORD)('out')
          AidlTypeElementImpl("IBinder")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("IBinder")
              AidlNameComponentImpl("IBinder")
                PsiElement(AidlTokenTypes.IDENTIFIER)('IBinder')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("repeated")
            PsiElement(AidlTokenTypes.IDENTIFIER)('repeated')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// All these constant expressions should be equal to 1')
      AidlConstantDeclarationImpl("A1")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A1")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A1')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.BITWISE_COMPLEMENT)('~')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.LPAREN)('(')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.MINUS)('-')
                PsiElement(AidlTokenTypes.INTVALUE)('1')
              PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A2")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A2")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A2')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.BITWISE_COMPLEMENT)('~')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.BITWISE_COMPLEMENT)('~')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.LPAREN)('(')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('1')
                PsiElement(AidlTokenTypes.LSHIFT)('<<')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.INTVALUE)('31')
              PsiElement(AidlTokenTypes.RPAREN)(')')
              PsiElement(AidlTokenTypes.EQUALITY)('==')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.LPAREN)('(')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.INTVALUE)('1')
                  PsiElement(AidlTokenTypes.LSHIFT)('<<')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.INTVALUE)('31')
                PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A3")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A3")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A3')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.MINUS)('-')
          PsiElement(AidlTokenTypes.HEXVALUE)('0x7fffffff')
          PsiElement(AidlTokenTypes.LT)('<')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A4")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A4")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A4')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.HEXVALUE)('0x80000000')
          PsiElement(AidlTokenTypes.LT)('<')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A5")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A5")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A5')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.HEXVALUE)('0x7fffffff')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('2147483647')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A6")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A6")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A6')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.LSHIFT)('<<')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('31')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.HEXVALUE)('0x80000000')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A7")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A7")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A7')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.PLUS)('+')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('2')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('3')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A8")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A8")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A8')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('8')
            PsiElement(AidlTokenTypes.MINUS)('-')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('9')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.MINUS)('-')
            PsiElement(AidlTokenTypes.INTVALUE)('1')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A9")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A9")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A9')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('9')
            PsiElement(AidlTokenTypes.MULTIPLY)('*')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('9')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('81')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A10")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A10")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A10')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('29')
            PsiElement(AidlTokenTypes.DIVIDE)('/')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('3')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('9')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A11")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A11")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A11')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('29')
            PsiElement(AidlTokenTypes.MODULO)('%')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('3')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('2')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A12")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A12")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A12')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.HEXVALUE)('0xC0010000')
            PsiElement(AidlTokenTypes.BITWISE_OR)('|')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.HEXVALUE)('0xF00D')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.HEXVALUE)('0xC001F00D')
            PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A13")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A13")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A13')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('10')
            PsiElement(AidlTokenTypes.BITWISE_OR)('|')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('6')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('14')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A14")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A14")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A14')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('10')
            PsiElement(AidlTokenTypes.BITWISE_AND)('&')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('6')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('2')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A15")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A15")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A15')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('10')
            PsiElement(AidlTokenTypes.BITWISE_XOR)('^')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('6')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('12')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A16")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A16")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A16')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('6')
          PsiElement(AidlTokenTypes.LT)('<')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('10')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A17")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A17")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A17')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('10')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('10')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A18")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A18")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A18')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('6')
            PsiElement(AidlTokenTypes.GT)('>')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('10')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A19")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A19")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A19')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('10')
            PsiElement(AidlTokenTypes.GT)('>')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('10')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A20")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A20")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A20')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('19')
          PsiElement(AidlTokenTypes.GEQ)('>=')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('10')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A21")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A21")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A21')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('10')
          PsiElement(AidlTokenTypes.GEQ)('>=')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('10')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A22")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A22")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A22')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('5')
          PsiElement(AidlTokenTypes.LEQ)('<=')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('10')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A23")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A23")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A23')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('19')
            PsiElement(AidlTokenTypes.LEQ)('<=')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('10')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A24")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A24")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A24')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('19')
          PsiElement(AidlTokenTypes.NEQ)('!=')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('10')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A25")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A25")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A25')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('10')
            PsiElement(AidlTokenTypes.NEQ)('!=')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('10')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A26")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A26")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A26')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('22')
            PsiElement(AidlTokenTypes.LSHIFT)('<<')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('44')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A27")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A27")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A27')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('11')
            PsiElement(AidlTokenTypes.RSHIFT)('>>')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('5')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A28")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A28")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A28')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.LOGICAL_OR)('||')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A29")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A29")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A29')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.LOGICAL_OR)('||')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A30")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A30")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A30')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
            PsiElement(AidlTokenTypes.LOGICAL_OR)('||')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A31")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A31")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A31')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
            PsiElement(AidlTokenTypes.LOGICAL_OR)('||')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A32")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A32")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A32')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.LOGICAL_AND)('&&')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A33")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A33")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A33')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.LOGICAL_AND)('&&')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A34")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A34")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A34')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
            PsiElement(AidlTokenTypes.LOGICAL_AND)('&&')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A35")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A35")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A35')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
            PsiElement(AidlTokenTypes.LOGICAL_AND)('&&')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A36")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A36")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A36')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('4')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('4')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A37")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A37")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A37')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.MINUS)('-')
          PsiElement(AidlTokenTypes.INTVALUE)('4')
          PsiElement(AidlTokenTypes.LT)('<')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A38")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A38")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A38')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.HEXVALUE)('0xffffffff')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.MINUS)('-')
            PsiElement(AidlTokenTypes.INTVALUE)('1')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A39")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A39")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A39')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('4')
          PsiElement(AidlTokenTypes.PLUS)('+')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('5')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A40")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A40")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A40')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('2')
          PsiElement(AidlTokenTypes.PLUS)('+')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('3')
            PsiElement(AidlTokenTypes.MINUS)('-')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('4')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A41")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A41")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A41')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('2')
          PsiElement(AidlTokenTypes.MINUS)('-')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('3')
            PsiElement(AidlTokenTypes.PLUS)('+')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('4')
              PsiElement(AidlTokenTypes.EQUALITY)('==')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('3')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A42")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A42")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A42')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('4')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A43")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A43")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A43')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.LOGICAL_AND)('&&')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A44")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A44")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A44')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.LOGICAL_OR)('||')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.LOGICAL_AND)('&&')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// && higher than ||')
      AidlConstantDeclarationImpl("A45")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A45")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A45')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.LT)('<')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('2')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A46")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A46")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A46')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.NOT)('!')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.NOT)('!')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.LPAREN)('(')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.LPAREN)('(')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.INTVALUE)('3')
                  PsiElement(AidlTokenTypes.NEQ)('!=')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.INTVALUE)('4')
                    PsiElement(AidlTokenTypes.LOGICAL_OR)('||')
                    AidlExpressionImpl(EXPRESSION)
                      PsiElement(AidlTokenTypes.LPAREN)('(')
                      AidlExpressionImpl(EXPRESSION)
                        PsiElement(AidlTokenTypes.INTVALUE)('2')
                        PsiElement(AidlTokenTypes.LT)('<')
                        AidlExpressionImpl(EXPRESSION)
                          PsiElement(AidlTokenTypes.INTVALUE)('3')
                          PsiElement(AidlTokenTypes.LEQ)('<=')
                          AidlExpressionImpl(EXPRESSION)
                            PsiElement(AidlTokenTypes.INTVALUE)('3')
                            PsiElement(AidlTokenTypes.GT)('>')
                            AidlExpressionImpl(EXPRESSION)
                              PsiElement(AidlTokenTypes.INTVALUE)('4')
                      PsiElement(AidlTokenTypes.RPAREN)(')')
                PsiElement(AidlTokenTypes.RPAREN)(')')
                PsiElement(AidlTokenTypes.GEQ)('>=')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.INTVALUE)('0')
              PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A47")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A47")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A47')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.NOT)('!')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
              PsiElement(AidlTokenTypes.EQUALITY)('==')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('7')
            PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.LOGICAL_AND)('&&')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.LPAREN)('(')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.LPAREN)('(')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.INTVALUE)('3')
                  PsiElement(AidlTokenTypes.NEQ)('!=')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.INTVALUE)('4')
                    PsiElement(AidlTokenTypes.LOGICAL_OR)('||')
                    AidlExpressionImpl(EXPRESSION)
                      PsiElement(AidlTokenTypes.LPAREN)('(')
                      AidlExpressionImpl(EXPRESSION)
                        PsiElement(AidlTokenTypes.INTVALUE)('2')
                        PsiElement(AidlTokenTypes.LT)('<')
                        AidlExpressionImpl(EXPRESSION)
                          PsiElement(AidlTokenTypes.INTVALUE)('3')
                          PsiElement(AidlTokenTypes.LEQ)('<=')
                          AidlExpressionImpl(EXPRESSION)
                            PsiElement(AidlTokenTypes.INTVALUE)('3')
                            PsiElement(AidlTokenTypes.GT)('>')
                            AidlExpressionImpl(EXPRESSION)
                              PsiElement(AidlTokenTypes.INTVALUE)('4')
                      PsiElement(AidlTokenTypes.RPAREN)(')')
                PsiElement(AidlTokenTypes.RPAREN)(')')
                PsiElement(AidlTokenTypes.GEQ)('>=')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.INTVALUE)('0')
              PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A48")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A48")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A48')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.LSHIFT)('<<')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('2')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.GEQ)('>=')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A49")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A49")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A49')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('4')
            PsiElement(AidlTokenTypes.RSHIFT)('>>')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('2')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A50")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A50")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A50')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('8')
            PsiElement(AidlTokenTypes.LSHIFT)('<<')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.MINUS)('-')
              PsiElement(AidlTokenTypes.INTVALUE)('1')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('4')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A51")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A51")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A51')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.LSHIFT)('<<')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('30')
              PsiElement(AidlTokenTypes.RSHIFT)('>>')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('30')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A52")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A52")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A52')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('1')
            PsiElement(AidlTokenTypes.BITWISE_OR)('|')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('16')
              PsiElement(AidlTokenTypes.RSHIFT)('>>')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('2')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('5')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A53")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A53")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A53')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.HEXVALUE)('0x0f')
            PsiElement(AidlTokenTypes.BITWISE_XOR)('^')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.HEXVALUE)('0x33')
              PsiElement(AidlTokenTypes.BITWISE_AND)('&')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.HEXVALUE)('0x99')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.HEXVALUE)('0x1e')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// & higher than ^')
      AidlConstantDeclarationImpl("A54")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A54")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A54')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.BITWISE_COMPLEMENT)('~')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('42')
              PsiElement(AidlTokenTypes.BITWISE_AND)('&')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.LPAREN)('(')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.INTVALUE)('1')
                  PsiElement(AidlTokenTypes.LSHIFT)('<<')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.INTVALUE)('3')
                    PsiElement(AidlTokenTypes.BITWISE_OR)('|')
                    AidlExpressionImpl(EXPRESSION)
                      PsiElement(AidlTokenTypes.INTVALUE)('16')
                      PsiElement(AidlTokenTypes.RSHIFT)('>>')
                      AidlExpressionImpl(EXPRESSION)
                        PsiElement(AidlTokenTypes.INTVALUE)('2')
                PsiElement(AidlTokenTypes.RPAREN)(')')
                PsiElement(AidlTokenTypes.BITWISE_XOR)('^')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.INTVALUE)('7')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('3')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A55")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A55")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A55')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('2')
            PsiElement(AidlTokenTypes.PLUS)('+')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('3')
              PsiElement(AidlTokenTypes.MINUS)('-')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.INTVALUE)('4')
                PsiElement(AidlTokenTypes.MULTIPLY)('*')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.MINUS)('-')
                  PsiElement(AidlTokenTypes.INTVALUE)('7')
                  PsiElement(AidlTokenTypes.DIVIDE)('/')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.LPAREN)('(')
                    AidlExpressionImpl(EXPRESSION)
                      PsiElement(AidlTokenTypes.INTVALUE)('10')
                      PsiElement(AidlTokenTypes.MODULO)('%')
                      AidlExpressionImpl(EXPRESSION)
                        PsiElement(AidlTokenTypes.INTVALUE)('3')
                    PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.MINUS)('-')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('33')
            PsiElement(AidlTokenTypes.EQUALITY)('==')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.INTVALUE)('0')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A56")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A56")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A56')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('2')
            PsiElement(AidlTokenTypes.PLUS)('+')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.LPAREN)('(')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.MINUS)('-')
                PsiElement(AidlTokenTypes.INTVALUE)('3')
                PsiElement(AidlTokenTypes.BITWISE_AND)('&')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.INTVALUE)('4')
                  PsiElement(AidlTokenTypes.DIVIDE)('/')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.INTVALUE)('7')
              PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.EQUALITY)('==')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.INTVALUE)('2')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlConstantDeclarationImpl("A57")
        PsiElement(AidlTokenTypes.CONST_KEYWORD)('const')
        AidlTypeElementImpl(TYPE_ELEMENT)
          PsiElement(AidlTokenTypes.INT_KEYWORD)('int')
        AidlNameComponentImpl("A57")
          PsiElement(AidlTokenTypes.IDENTIFIER)('A57')
        PsiElement(AidlTokenTypes.ASSIGN)('=')
        AidlExpressionImpl(EXPRESSION)
          PsiElement(AidlTokenTypes.LPAREN)('(')
          AidlExpressionImpl(EXPRESSION)
            PsiElement(AidlTokenTypes.LPAREN)('(')
            AidlExpressionImpl(EXPRESSION)
              PsiElement(AidlTokenTypes.LPAREN)('(')
              AidlExpressionImpl(EXPRESSION)
                PsiElement(AidlTokenTypes.LPAREN)('(')
                AidlExpressionImpl(EXPRESSION)
                  PsiElement(AidlTokenTypes.LPAREN)('(')
                  AidlExpressionImpl(EXPRESSION)
                    PsiElement(AidlTokenTypes.INTVALUE)('1')
                    PsiElement(AidlTokenTypes.PLUS)('+')
                    AidlExpressionImpl(EXPRESSION)
                      PsiElement(AidlTokenTypes.INTVALUE)('0')
                  PsiElement(AidlTokenTypes.RPAREN)(')')
                PsiElement(AidlTokenTypes.RPAREN)(')')
              PsiElement(AidlTokenTypes.RPAREN)(')')
            PsiElement(AidlTokenTypes.RPAREN)(')')
          PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("GetOldNameInterface")
        AidlTypeElementImpl("IOldName")
          AidlQualifiedNameImpl("IOldName")
            AidlNameComponentImpl("IOldName")
              PsiElement(AidlTokenTypes.IDENTIFIER)('IOldName')
        AidlNameComponentImpl("GetOldNameInterface")
          PsiElement(AidlTokenTypes.IDENTIFIER)('GetOldNameInterface')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("GetNewNameInterface")
        AidlTypeElementImpl("INewName")
          AidlQualifiedNameImpl("INewName")
            AidlNameComponentImpl("INewName")
              PsiElement(AidlTokenTypes.IDENTIFIER)('INewName')
        AidlNameComponentImpl("GetNewNameInterface")
          PsiElement(AidlTokenTypes.IDENTIFIER)('GetNewNameInterface')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      PsiComment(AidlTokenTypes.COMMENT)('// Retrieve the ICppJavaTests if the server supports it')
      AidlMethodDeclarationImpl("GetCppJavaTests")
        AidlTypeElementImpl("IBinder")
          AidlAnnotationElementImpl("nullable")
            PsiElement(AidlTokenTypes.AT)('@')
            AidlQualifiedNameImpl("nullable")
              AidlNameComponentImpl("nullable")
                PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
          AidlQualifiedNameImpl("IBinder")
            AidlNameComponentImpl("IBinder")
              PsiElement(AidlTokenTypes.IDENTIFIER)('IBinder')
        AidlNameComponentImpl("GetCppJavaTests")
          PsiElement(AidlTokenTypes.IDENTIFIER)('GetCppJavaTests')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlMethodDeclarationImpl("getBackendType")
        AidlTypeElementImpl("BackendType")
          AidlQualifiedNameImpl("BackendType")
            AidlNameComponentImpl("BackendType")
              PsiElement(AidlTokenTypes.IDENTIFIER)('BackendType')
        AidlNameComponentImpl("getBackendType")
          PsiElement(AidlTokenTypes.IDENTIFIER)('getBackendType')
        PsiElement(AidlTokenTypes.LPAREN)('(')
        PsiElement(AidlTokenTypes.RPAREN)(')')
        PsiElement(AidlTokenTypes.SEMICOLON)(';')
      AidlParcelableDeclarationImpl("CompilerChecks" as in "android.aidl.tests.ITestService.CompilerChecks")
        PsiElement(AidlTokenTypes.PARCELABLE_KEYWORD)('parcelable')
        AidlDottedNameImpl("CompilerChecks")
          AidlNameComponentImpl("CompilerChecks")
            PsiElement(AidlTokenTypes.IDENTIFIER)('CompilerChecks')
        PsiElement(AidlTokenTypes.LBRACE)('{')
        PsiComment(AidlTokenTypes.COMMENT)('// IBinder')
        AidlVariableDeclarationImpl("binder")
          AidlTypeElementImpl("IBinder")
            AidlQualifiedNameImpl("IBinder")
              AidlNameComponentImpl("IBinder")
                PsiElement(AidlTokenTypes.IDENTIFIER)('IBinder')
          AidlNameComponentImpl("binder")
            PsiElement(AidlTokenTypes.IDENTIFIER)('binder')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        AidlVariableDeclarationImpl("nullable_binder")
          AidlTypeElementImpl("IBinder")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("IBinder")
              AidlNameComponentImpl("IBinder")
                PsiElement(AidlTokenTypes.IDENTIFIER)('IBinder')
          AidlNameComponentImpl("nullable_binder")
            PsiElement(AidlTokenTypes.IDENTIFIER)('nullable_binder')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        AidlVariableDeclarationImpl("binder_array")
          AidlTypeElementImpl("IBinder")
            AidlQualifiedNameImpl("IBinder")
              AidlNameComponentImpl("IBinder")
                PsiElement(AidlTokenTypes.IDENTIFIER)('IBinder')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("binder_array")
            PsiElement(AidlTokenTypes.IDENTIFIER)('binder_array')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        AidlVariableDeclarationImpl("nullable_binder_array")
          AidlTypeElementImpl("IBinder")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("IBinder")
              AidlNameComponentImpl("IBinder")
                PsiElement(AidlTokenTypes.IDENTIFIER)('IBinder')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("nullable_binder_array")
            PsiElement(AidlTokenTypes.IDENTIFIER)('nullable_binder_array')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        AidlVariableDeclarationImpl("binder_list")
          AidlTypeElementImpl("List")
            AidlQualifiedNameImpl("List")
              AidlNameComponentImpl("List")
                PsiElement(AidlTokenTypes.IDENTIFIER)('List')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlTypeElementImpl("IBinder")
              AidlQualifiedNameImpl("IBinder")
                AidlNameComponentImpl("IBinder")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('IBinder')
            PsiElement(AidlTokenTypes.GT)('>')
          AidlNameComponentImpl("binder_list")
            PsiElement(AidlTokenTypes.IDENTIFIER)('binder_list')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        AidlVariableDeclarationImpl("nullable_binder_list")
          AidlTypeElementImpl("List")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("List")
              AidlNameComponentImpl("List")
                PsiElement(AidlTokenTypes.IDENTIFIER)('List')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlTypeElementImpl("IBinder")
              AidlQualifiedNameImpl("IBinder")
                AidlNameComponentImpl("IBinder")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('IBinder')
            PsiElement(AidlTokenTypes.GT)('>')
          AidlNameComponentImpl("nullable_binder_list")
            PsiElement(AidlTokenTypes.IDENTIFIER)('nullable_binder_list')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        PsiComment(AidlTokenTypes.COMMENT)('// ParcelFileDescriptor')
        AidlVariableDeclarationImpl("pfd")
          AidlTypeElementImpl("ParcelFileDescriptor")
            AidlQualifiedNameImpl("ParcelFileDescriptor")
              AidlNameComponentImpl("ParcelFileDescriptor")
                PsiElement(AidlTokenTypes.IDENTIFIER)('ParcelFileDescriptor')
          AidlNameComponentImpl("pfd")
            PsiElement(AidlTokenTypes.IDENTIFIER)('pfd')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        AidlVariableDeclarationImpl("nullable_pfd")
          AidlTypeElementImpl("ParcelFileDescriptor")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("ParcelFileDescriptor")
              AidlNameComponentImpl("ParcelFileDescriptor")
                PsiElement(AidlTokenTypes.IDENTIFIER)('ParcelFileDescriptor')
          AidlNameComponentImpl("nullable_pfd")
            PsiElement(AidlTokenTypes.IDENTIFIER)('nullable_pfd')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        AidlVariableDeclarationImpl("pfd_array")
          AidlTypeElementImpl("ParcelFileDescriptor")
            AidlQualifiedNameImpl("ParcelFileDescriptor")
              AidlNameComponentImpl("ParcelFileDescriptor")
                PsiElement(AidlTokenTypes.IDENTIFIER)('ParcelFileDescriptor')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("pfd_array")
            PsiElement(AidlTokenTypes.IDENTIFIER)('pfd_array')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        AidlVariableDeclarationImpl("nullable_pfd_array")
          AidlTypeElementImpl("ParcelFileDescriptor")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("ParcelFileDescriptor")
              AidlNameComponentImpl("ParcelFileDescriptor")
                PsiElement(AidlTokenTypes.IDENTIFIER)('ParcelFileDescriptor')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("nullable_pfd_array")
            PsiElement(AidlTokenTypes.IDENTIFIER)('nullable_pfd_array')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        AidlVariableDeclarationImpl("pfd_list")
          AidlTypeElementImpl("List")
            AidlQualifiedNameImpl("List")
              AidlNameComponentImpl("List")
                PsiElement(AidlTokenTypes.IDENTIFIER)('List')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlTypeElementImpl("ParcelFileDescriptor")
              AidlQualifiedNameImpl("ParcelFileDescriptor")
                AidlNameComponentImpl("ParcelFileDescriptor")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('ParcelFileDescriptor')
            PsiElement(AidlTokenTypes.GT)('>')
          AidlNameComponentImpl("pfd_list")
            PsiElement(AidlTokenTypes.IDENTIFIER)('pfd_list')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        AidlVariableDeclarationImpl("nullable_pfd_list")
          AidlTypeElementImpl("List")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("List")
              AidlNameComponentImpl("List")
                PsiElement(AidlTokenTypes.IDENTIFIER)('List')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlTypeElementImpl("ParcelFileDescriptor")
              AidlQualifiedNameImpl("ParcelFileDescriptor")
                AidlNameComponentImpl("ParcelFileDescriptor")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('ParcelFileDescriptor')
            PsiElement(AidlTokenTypes.GT)('>')
          AidlNameComponentImpl("nullable_pfd_list")
            PsiElement(AidlTokenTypes.IDENTIFIER)('nullable_pfd_list')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        PsiComment(AidlTokenTypes.COMMENT)('// parcelable')
        AidlVariableDeclarationImpl("parcel")
          AidlTypeElementImpl("Empty")
            AidlQualifiedNameImpl("Empty")
              AidlNameComponentImpl("Empty")
                PsiElement(AidlTokenTypes.IDENTIFIER)('Empty')
          AidlNameComponentImpl("parcel")
            PsiElement(AidlTokenTypes.IDENTIFIER)('parcel')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        AidlVariableDeclarationImpl("nullable_parcel")
          AidlTypeElementImpl("Empty")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("Empty")
              AidlNameComponentImpl("Empty")
                PsiElement(AidlTokenTypes.IDENTIFIER)('Empty')
          AidlNameComponentImpl("nullable_parcel")
            PsiElement(AidlTokenTypes.IDENTIFIER)('nullable_parcel')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        AidlVariableDeclarationImpl("parcel_array")
          AidlTypeElementImpl("Empty")
            AidlQualifiedNameImpl("Empty")
              AidlNameComponentImpl("Empty")
                PsiElement(AidlTokenTypes.IDENTIFIER)('Empty')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("parcel_array")
            PsiElement(AidlTokenTypes.IDENTIFIER)('parcel_array')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        AidlVariableDeclarationImpl("nullable_parcel_array")
          AidlTypeElementImpl("Empty")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("Empty")
              AidlNameComponentImpl("Empty")
                PsiElement(AidlTokenTypes.IDENTIFIER)('Empty')
            PsiElement(AidlTokenTypes.LBRACKET)('[')
            PsiElement(AidlTokenTypes.RBRACKET)(']')
          AidlNameComponentImpl("nullable_parcel_array")
            PsiElement(AidlTokenTypes.IDENTIFIER)('nullable_parcel_array')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        AidlVariableDeclarationImpl("parcel_list")
          AidlTypeElementImpl("List")
            AidlQualifiedNameImpl("List")
              AidlNameComponentImpl("List")
                PsiElement(AidlTokenTypes.IDENTIFIER)('List')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlTypeElementImpl("Empty")
              AidlQualifiedNameImpl("Empty")
                AidlNameComponentImpl("Empty")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('Empty')
            PsiElement(AidlTokenTypes.GT)('>')
          AidlNameComponentImpl("parcel_list")
            PsiElement(AidlTokenTypes.IDENTIFIER)('parcel_list')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        AidlVariableDeclarationImpl("nullable_parcel_list")
          AidlTypeElementImpl("List")
            AidlAnnotationElementImpl("nullable")
              PsiElement(AidlTokenTypes.AT)('@')
              AidlQualifiedNameImpl("nullable")
                AidlNameComponentImpl("nullable")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('nullable')
            AidlQualifiedNameImpl("List")
              AidlNameComponentImpl("List")
                PsiElement(AidlTokenTypes.IDENTIFIER)('List')
            PsiElement(AidlTokenTypes.LT)('<')
            AidlTypeElementImpl("Empty")
              AidlQualifiedNameImpl("Empty")
                AidlNameComponentImpl("Empty")
                  PsiElement(AidlTokenTypes.IDENTIFIER)('Empty')
            PsiElement(AidlTokenTypes.GT)('>')
          AidlNameComponentImpl("nullable_parcel_list")
            PsiElement(AidlTokenTypes.IDENTIFIER)('nullable_parcel_list')
          PsiElement(AidlTokenTypes.SEMICOLON)(';')
        PsiElement(AidlTokenTypes.RBRACE)('}')
      PsiElement(AidlTokenTypes.RBRACE)('}')